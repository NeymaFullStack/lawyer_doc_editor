"use client";

import { cn } from "@/lib/utils";
import { FC, forwardRef, HTMLAttributes, SVGAttributes } from "react";

export type IconProps = {
  iconName: keyof typeof icons;
  iconClassName?: string;
  width?: number;
  height?: number;
  customColor?: string;
  fill: string | { from: string; to: string };
} & Pick<HTMLAttributes<HTMLDivElement>, "className" | "onClick" | "style">;

export type SvgIconProps = Omit<SVGAttributes<SVGElement>, "fill"> & {
  fill: string | { from: string; to: string };
  customColor?: string;
};

export const icons = {
  "gradient-workspace": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        width="18"
        height="16"
        viewBox="0 0 18 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M6.25354 2.99792C6.25354 2.33543 6.51671 1.70007 6.98516 1.23162C7.45361 0.763172 8.08897 0.5 8.75146 0.5C9.41395 0.5 10.0493 0.763172 10.5178 1.23162C10.9862 1.70007 11.2494 2.33543 11.2494 2.99792C11.2494 3.6604 10.9862 4.29576 10.5178 4.76421C10.0493 5.23266 9.41395 5.49583 8.75146 5.49583C8.08897 5.49583 7.45361 5.23266 6.98516 4.76421C6.51671 4.29576 6.25354 3.6604 6.25354 2.99792ZM8.75146 1.75021C8.58761 1.75021 8.42536 1.78248 8.27398 1.84518C8.1226 1.90789 7.98506 1.99979 7.86919 2.11565C7.75333 2.23151 7.66143 2.36906 7.59873 2.52044C7.53602 2.67182 7.50375 2.83406 7.50375 2.99792C7.50375 3.16177 7.53602 3.32401 7.59873 3.47539C7.66143 3.62677 7.75333 3.76432 7.86919 3.88018C7.98506 3.99604 8.1226 4.08794 8.27398 4.15065C8.42536 4.21335 8.58761 4.24562 8.75146 4.24562C9.08237 4.24562 9.39973 4.11417 9.63372 3.88018C9.86771 3.64619 9.99917 3.32883 9.99917 2.99792C9.99917 2.667 9.86771 2.34964 9.63372 2.11565C9.39973 1.88166 9.08237 1.75021 8.75146 1.75021ZM12.5021 3.62302C12.5021 3.37675 12.5506 3.13289 12.6448 2.90537C12.7391 2.67785 12.8772 2.47111 13.0513 2.29697C13.2255 2.12284 13.4322 1.9847 13.6597 1.89046C13.8873 1.79621 14.1311 1.74771 14.3774 1.74771C14.6237 1.74771 14.8675 1.79621 15.095 1.89046C15.3226 1.9847 15.5293 2.12284 15.7034 2.29697C15.8776 2.47111 16.0157 2.67785 16.11 2.90537C16.2042 3.13289 16.2527 3.37675 16.2527 3.62302C16.2527 4.12038 16.0551 4.59738 15.7034 4.94907C15.3518 5.30076 14.8748 5.49833 14.3774 5.49833C13.88 5.49833 13.403 5.30076 13.0513 4.94907C12.6997 4.59738 12.5021 4.12038 12.5021 3.62302ZM14.3774 2.99792C14.2116 2.99792 14.0526 3.06378 13.9354 3.18101C13.8181 3.29823 13.7523 3.45723 13.7523 3.62302C13.7523 3.78881 13.8181 3.94781 13.9354 4.06504C14.0526 4.18227 14.2116 4.24812 14.3774 4.24812C14.5432 4.24812 14.7022 4.18227 14.8194 4.06504C14.9366 3.94781 15.0025 3.78881 15.0025 3.62302C15.0025 3.45723 14.9366 3.29823 14.8194 3.18101C14.7022 3.06378 14.5432 2.99792 14.3774 2.99792ZM3.12552 1.74771C2.62816 1.74771 2.15116 1.94528 1.79947 2.29697C1.44779 2.64866 1.25021 3.12566 1.25021 3.62302C1.25021 4.12038 1.44779 4.59738 1.79947 4.94907C2.15116 5.30076 2.62816 5.49833 3.12552 5.49833C3.62288 5.49833 4.09988 5.30076 4.45157 4.94907C4.80326 4.59738 5.00083 4.12038 5.00083 3.62302C5.00083 3.12566 4.80326 2.64866 4.45157 2.29697C4.09988 1.94528 3.62288 1.74771 3.12552 1.74771ZM2.50042 3.62302C2.50042 3.45723 2.56628 3.29823 2.68351 3.18101C2.80074 3.06378 2.95973 2.99792 3.12552 2.99792C3.29131 2.99792 3.45031 3.06378 3.56754 3.18101C3.68477 3.29823 3.75063 3.45723 3.75063 3.62302C3.75063 3.78881 3.68477 3.94781 3.56754 4.06504C3.45031 4.18227 3.29131 4.24812 3.12552 4.24812C2.95973 4.24812 2.80074 4.18227 2.68351 4.06504C2.56628 3.94781 2.50042 3.78881 2.50042 3.62302ZM4.08568 6.74854C3.86565 7.12842 3.75005 7.55975 3.75063 7.99875H1.25021V11.1243C1.25011 11.4352 1.32734 11.7414 1.47495 12.0151C1.62257 12.2888 1.83593 12.5215 2.09583 12.6922C2.35574 12.863 2.65402 12.9664 2.96384 12.9932C3.27365 13.02 3.58527 12.9694 3.87065 12.8458C3.96316 13.2596 4.10818 13.6547 4.29572 14.0235C3.82122 14.2151 3.30694 14.2872 2.79804 14.2336C2.28914 14.18 1.80119 14.0023 1.37703 13.716C0.952879 13.4297 0.6055 13.0437 0.365402 12.5918C0.125303 12.1399 -0.000170088 11.636 1.73045e-07 11.1243V7.99875C1.73045e-07 7.66717 0.131718 7.34918 0.366178 7.11472C0.600637 6.88026 0.918633 6.74854 1.25021 6.74854H4.08568ZM13.2072 14.0235C13.6817 14.2151 14.196 14.2872 14.7049 14.2336C15.2138 14.18 15.7017 14.0023 16.1259 13.716C16.55 13.4297 16.8974 13.0437 17.1375 12.5918C17.3776 12.1399 17.5031 11.636 17.5029 11.1243V7.99875C17.5029 7.66717 17.3712 7.34918 17.1367 7.11472C16.9023 6.88026 16.5843 6.74854 16.2527 6.74854H13.4172C13.6298 7.1161 13.7523 7.54242 13.7523 7.99875H16.2527V11.1243C16.2528 11.4352 16.1756 11.7414 16.028 12.0151C15.8803 12.2888 15.667 12.5215 15.4071 12.6922C15.1472 12.863 14.8489 12.9664 14.5391 12.9932C14.2293 13.02 13.9176 12.9694 13.6323 12.8458C13.5385 13.2596 13.3947 13.6547 13.2072 14.0235ZM6.25104 6.74729C5.91947 6.74729 5.60147 6.87901 5.36701 7.11347C5.13255 7.34793 5.00083 7.66592 5.00083 7.9975V11.7494C5.00083 12.7441 5.39599 13.6981 6.09937 14.4015C6.80274 15.1048 7.75673 15.5 8.75146 15.5C9.74619 15.5 10.7002 15.1048 11.4036 14.4015C12.1069 13.6981 12.5021 12.7441 12.5021 11.7494V7.99875C12.5021 7.66717 12.3704 7.34918 12.1359 7.11472C11.9014 6.88026 11.5835 6.74854 11.2519 6.74854L6.25104 6.74729ZM6.25104 7.9975H11.2519V11.7494C11.2519 12.4125 10.9884 13.0485 10.5195 13.5174C10.0506 13.9864 9.41461 14.2498 8.75146 14.2498C8.08831 14.2498 7.45232 13.9864 6.9834 13.5174C6.51448 13.0485 6.25104 12.4125 6.25104 11.7494V7.9975Z"
          fill="url(#paint0_linear_4806_118078)"
        />
        <defs>
          <linearGradient
            id="paint0_linear_4806_118078"
            x1="0.095628"
            y1="0.499999"
            x2="19.3342"
            y2="4.27382"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  workspace: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="18"
        height="16"
        viewBox="0 0 18 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M6.25354 2.99792C6.25354 2.33543 6.51671 1.70007 6.98516 1.23162C7.45361 0.763172 8.08897 0.5 8.75146 0.5C9.41395 0.5 10.0493 0.763172 10.5178 1.23162C10.9862 1.70007 11.2494 2.33543 11.2494 2.99792C11.2494 3.6604 10.9862 4.29576 10.5178 4.76421C10.0493 5.23266 9.41395 5.49583 8.75146 5.49583C8.08897 5.49583 7.45361 5.23266 6.98516 4.76421C6.51671 4.29576 6.25354 3.6604 6.25354 2.99792ZM8.75146 1.75021C8.58761 1.75021 8.42536 1.78248 8.27398 1.84518C8.1226 1.90789 7.98506 1.99979 7.86919 2.11565C7.75333 2.23151 7.66143 2.36906 7.59873 2.52044C7.53602 2.67182 7.50375 2.83406 7.50375 2.99792C7.50375 3.16177 7.53602 3.32401 7.59873 3.47539C7.66143 3.62677 7.75333 3.76432 7.86919 3.88018C7.98506 3.99604 8.1226 4.08794 8.27398 4.15065C8.42536 4.21335 8.58761 4.24562 8.75146 4.24562C9.08237 4.24562 9.39973 4.11417 9.63372 3.88018C9.86771 3.64619 9.99917 3.32883 9.99917 2.99792C9.99917 2.667 9.86771 2.34964 9.63372 2.11565C9.39973 1.88166 9.08237 1.75021 8.75146 1.75021ZM12.5021 3.62302C12.5021 3.37675 12.5506 3.13289 12.6448 2.90537C12.7391 2.67785 12.8772 2.47111 13.0513 2.29697C13.2255 2.12284 13.4322 1.9847 13.6597 1.89046C13.8873 1.79621 14.1311 1.74771 14.3774 1.74771C14.6237 1.74771 14.8675 1.79621 15.095 1.89046C15.3226 1.9847 15.5293 2.12284 15.7034 2.29697C15.8776 2.47111 16.0157 2.67785 16.11 2.90537C16.2042 3.13289 16.2527 3.37675 16.2527 3.62302C16.2527 4.12038 16.0551 4.59738 15.7034 4.94907C15.3518 5.30076 14.8748 5.49833 14.3774 5.49833C13.88 5.49833 13.403 5.30076 13.0513 4.94907C12.6997 4.59738 12.5021 4.12038 12.5021 3.62302ZM14.3774 2.99792C14.2116 2.99792 14.0526 3.06378 13.9354 3.18101C13.8181 3.29823 13.7523 3.45723 13.7523 3.62302C13.7523 3.78881 13.8181 3.94781 13.9354 4.06504C14.0526 4.18227 14.2116 4.24812 14.3774 4.24812C14.5432 4.24812 14.7022 4.18227 14.8194 4.06504C14.9366 3.94781 15.0025 3.78881 15.0025 3.62302C15.0025 3.45723 14.9366 3.29823 14.8194 3.18101C14.7022 3.06378 14.5432 2.99792 14.3774 2.99792ZM3.12552 1.74771C2.62816 1.74771 2.15116 1.94528 1.79947 2.29697C1.44779 2.64866 1.25021 3.12566 1.25021 3.62302C1.25021 4.12038 1.44779 4.59738 1.79947 4.94907C2.15116 5.30076 2.62816 5.49833 3.12552 5.49833C3.62288 5.49833 4.09988 5.30076 4.45157 4.94907C4.80326 4.59738 5.00083 4.12038 5.00083 3.62302C5.00083 3.12566 4.80326 2.64866 4.45157 2.29697C4.09988 1.94528 3.62288 1.74771 3.12552 1.74771ZM2.50042 3.62302C2.50042 3.45723 2.56628 3.29823 2.68351 3.18101C2.80074 3.06378 2.95973 2.99792 3.12552 2.99792C3.29131 2.99792 3.45031 3.06378 3.56754 3.18101C3.68477 3.29823 3.75063 3.45723 3.75063 3.62302C3.75063 3.78881 3.68477 3.94781 3.56754 4.06504C3.45031 4.18227 3.29131 4.24812 3.12552 4.24812C2.95973 4.24812 2.80074 4.18227 2.68351 4.06504C2.56628 3.94781 2.50042 3.78881 2.50042 3.62302ZM4.08568 6.74854C3.86565 7.12842 3.75005 7.55975 3.75063 7.99875H1.25021V11.1243C1.25011 11.4352 1.32734 11.7414 1.47495 12.0151C1.62257 12.2888 1.83593 12.5215 2.09583 12.6922C2.35574 12.863 2.65402 12.9664 2.96384 12.9932C3.27365 13.02 3.58527 12.9694 3.87065 12.8458C3.96316 13.2596 4.10818 13.6547 4.29572 14.0235C3.82122 14.2151 3.30694 14.2872 2.79804 14.2336C2.28914 14.18 1.80119 14.0023 1.37703 13.716C0.952879 13.4297 0.6055 13.0437 0.365402 12.5918C0.125303 12.1399 -0.000170088 11.636 1.73045e-07 11.1243V7.99875C1.73045e-07 7.66717 0.131718 7.34918 0.366178 7.11472C0.600637 6.88026 0.918633 6.74854 1.25021 6.74854H4.08568ZM13.2072 14.0235C13.6817 14.2151 14.196 14.2872 14.7049 14.2336C15.2138 14.18 15.7017 14.0023 16.1259 13.716C16.55 13.4297 16.8974 13.0437 17.1375 12.5918C17.3776 12.1399 17.5031 11.636 17.5029 11.1243V7.99875C17.5029 7.66717 17.3712 7.34918 17.1367 7.11472C16.9023 6.88026 16.5843 6.74854 16.2527 6.74854H13.4172C13.6298 7.1161 13.7523 7.54242 13.7523 7.99875H16.2527V11.1243C16.2528 11.4352 16.1756 11.7414 16.028 12.0151C15.8803 12.2888 15.667 12.5215 15.4071 12.6922C15.1472 12.863 14.8489 12.9664 14.5391 12.9932C14.2293 13.02 13.9176 12.9694 13.6323 12.8458C13.5385 13.2596 13.3947 13.6547 13.2072 14.0235ZM6.25104 6.74729C5.91947 6.74729 5.60147 6.87901 5.36701 7.11347C5.13255 7.34793 5.00083 7.66592 5.00083 7.9975V11.7494C5.00083 12.7441 5.39599 13.6981 6.09937 14.4015C6.80274 15.1048 7.75673 15.5 8.75146 15.5C9.74619 15.5 10.7002 15.1048 11.4036 14.4015C12.1069 13.6981 12.5021 12.7441 12.5021 11.7494V7.99875C12.5021 7.66717 12.3704 7.34918 12.1359 7.11472C11.9014 6.88026 11.5835 6.74854 11.2519 6.74854L6.25104 6.74729ZM6.25104 7.9975H11.2519V11.7494C11.2519 12.4125 10.9884 13.0485 10.5195 13.5174C10.0506 13.9864 9.41461 14.2498 8.75146 14.2498C8.08831 14.2498 7.45232 13.9864 6.9834 13.5174C6.51448 13.0485 6.25104 12.4125 6.25104 11.7494V7.9975Z"
          fill={color ?? "#095AD3"}
        />
      </svg>
    );
  },
  "gradient-arrowDown": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        width="11"
        height="6"
        viewBox="0 0 11 6"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M9.76147 1.11492L5.70842 5.16797L1.65537 1.11492"
          stroke="url(#paint0_linear_4806_117739)"
          strokeWidth="1.35102"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <defs>
          <linearGradient
            id="paint0_linear_4806_117739"
            x1="9.71719"
            y1="5.16797"
            x2="1.40414"
            y2="2.37298"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  "gradient-switch": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        width="15"
        height="12"
        viewBox="0 0 15 12"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1.21426 6.29297C1.21426 4.35339 2.94594 2.79297 5.06529 2.79297H14.051"
          stroke="url(#paint0_linear_3449_43104)"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M12.1255 1.04297L14.051 2.79297L12.1255 4.54297M14.051 5.70964C14.051 7.64922 12.3193 9.20964 10.2 9.20964H1.21426"
          stroke="url(#paint1_linear_3449_43104)"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M3.13978 10.9609L1.21426 9.21094L3.13978 7.46094"
          stroke="url(#paint2_linear_3449_43104)"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <defs>
          <linearGradient
            id="paint0_linear_3449_43104"
            x1="1.2844"
            y1="2.79297"
            x2="11.9011"
            y2="9.33882"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
          <linearGradient
            id="paint1_linear_3449_43104"
            x1="1.2844"
            y1="1.04297"
            x2="14.9807"
            y2="4.66209"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
          <linearGradient
            id="paint2_linear_3449_43104"
            x1="1.22478"
            y1="7.46094"
            x2="3.40404"
            y2="7.66248"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  "gradient-plus": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        width="13"
        height="15"
        viewBox="0 0 13 15"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M11.3083 8.43159H6.95894V13.0916C6.95894 13.3388 6.86729 13.5758 6.70416 13.7506C6.54103 13.9254 6.31978 14.0236 6.08907 14.0236C5.85837 14.0236 5.63712 13.9254 5.47398 13.7506C5.31085 13.5758 5.2192 13.3388 5.2192 13.0916V8.43159H0.869867C0.639164 8.43159 0.41791 8.3334 0.254778 8.15862C0.0916467 7.98383 0 7.74677 0 7.49959C0 7.25241 0.0916467 7.01535 0.254778 6.84057C0.41791 6.66578 0.639164 6.56759 0.869867 6.56759H5.2192V1.90759C5.2192 1.6604 5.31085 1.42335 5.47398 1.24856C5.63712 1.07378 5.85837 0.975586 6.08907 0.975586C6.31978 0.975586 6.54103 1.07378 6.70416 1.24856C6.86729 1.42335 6.95894 1.6604 6.95894 1.90759V6.56759H11.3083C11.539 6.56759 11.7602 6.66578 11.9234 6.84057C12.0865 7.01535 12.1781 7.25241 12.1781 7.49959C12.1781 7.74677 12.0865 7.98383 11.9234 8.15862C11.7602 8.3334 11.539 8.43159 11.3083 8.43159Z"
          fill="url(#paint0_linear_4806_125844)"
        />
        <defs>
          <linearGradient
            id="paint0_linear_4806_125844"
            x1="0.0665359"
            y1="0.975585"
            x2="13.6334"
            y2="3.10424"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  plus: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="13"
        height="15"
        viewBox="0 0 13 15"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M11.3083 8.43159H6.95894V13.0916C6.95894 13.3388 6.86729 13.5758 6.70416 13.7506C6.54103 13.9254 6.31978 14.0236 6.08907 14.0236C5.85837 14.0236 5.63712 13.9254 5.47398 13.7506C5.31085 13.5758 5.2192 13.3388 5.2192 13.0916V8.43159H0.869867C0.639164 8.43159 0.41791 8.3334 0.254778 8.15862C0.0916467 7.98383 0 7.74677 0 7.49959C0 7.25241 0.0916467 7.01535 0.254778 6.84057C0.41791 6.66578 0.639164 6.56759 0.869867 6.56759H5.2192V1.90759C5.2192 1.6604 5.31085 1.42335 5.47398 1.24856C5.63712 1.07378 5.85837 0.975586 6.08907 0.975586C6.31978 0.975586 6.54103 1.07378 6.70416 1.24856C6.86729 1.42335 6.95894 1.6604 6.95894 1.90759V6.56759H11.3083C11.539 6.56759 11.7602 6.66578 11.9234 6.84057C12.0865 7.01535 12.1781 7.25241 12.1781 7.49959C12.1781 7.74677 12.0865 7.98383 11.9234 8.15862C11.7602 8.3334 11.539 8.43159 11.3083 8.43159Z"
          fill={color ?? "white"}
        />
      </svg>
    );
  },
  "gradient-document": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        width="14"
        height="16"
        viewBox="0 0 14 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M0.854583 1.10166C-5.58794e-08 1.97991 0 3.39441 0 6.22266V9.22266C0 12.0509 -5.58794e-08 13.4654 0.854583 14.3437C1.70844 15.2227 3.08365 15.2227 5.83333 15.2227H7.29167C10.0414 15.2227 11.4166 15.2227 12.2704 14.3437C13.125 13.4654 13.125 12.0509 13.125 9.22266V6.22266C13.125 3.39441 13.125 1.97991 12.2704 1.10166C11.4166 0.222656 10.0414 0.222656 7.29167 0.222656H5.83333C3.08365 0.222656 1.70844 0.222656 0.854583 1.10166ZM3.64583 5.66016C3.50079 5.66016 3.36169 5.71942 3.25913 5.82491C3.15658 5.9304 3.09896 6.07347 3.09896 6.22266C3.09896 6.37184 3.15658 6.51491 3.25913 6.6204C3.36169 6.72589 3.50079 6.78516 3.64583 6.78516H9.47917C9.62421 6.78516 9.76331 6.72589 9.86587 6.6204C9.96843 6.51491 10.026 6.37184 10.026 6.22266C10.026 6.07347 9.96843 5.9304 9.86587 5.82491C9.76331 5.71942 9.62421 5.66016 9.47917 5.66016H3.64583ZM3.64583 8.66016C3.50079 8.66016 3.36169 8.71942 3.25913 8.82491C3.15658 8.9304 3.09896 9.07347 3.09896 9.22266C3.09896 9.37184 3.15658 9.51491 3.25913 9.6204C3.36169 9.72589 3.50079 9.78516 3.64583 9.78516H7.29167C7.43671 9.78516 7.57581 9.72589 7.67837 9.6204C7.78092 9.51491 7.83854 9.37184 7.83854 9.22266C7.83854 9.07347 7.78092 8.9304 7.67837 8.82491C7.57581 8.71942 7.43671 8.66016 7.29167 8.66016H3.64583Z"
          fill="url(#paint0_linear_2240_34380)"
        />
        <defs>
          <linearGradient
            id="paint0_linear_2240_34380"
            x1="0.0717091"
            y1="0.222655"
            x2="14.736"
            y2="2.3797"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  document: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="14"
        height="16"
        viewBox="0 0 14 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M0.854583 1.10166C-5.58794e-08 1.97991 0 3.39441 0 6.22266V9.22266C0 12.0509 -5.58794e-08 13.4654 0.854583 14.3437C1.70844 15.2227 3.08365 15.2227 5.83333 15.2227H7.29167C10.0414 15.2227 11.4166 15.2227 12.2704 14.3437C13.125 13.4654 13.125 12.0509 13.125 9.22266V6.22266C13.125 3.39441 13.125 1.97991 12.2704 1.10166C11.4166 0.222656 10.0414 0.222656 7.29167 0.222656H5.83333C3.08365 0.222656 1.70844 0.222656 0.854583 1.10166ZM3.64583 5.66016C3.50079 5.66016 3.36169 5.71942 3.25913 5.82491C3.15658 5.9304 3.09896 6.07347 3.09896 6.22266C3.09896 6.37184 3.15658 6.51491 3.25913 6.6204C3.36169 6.72589 3.50079 6.78516 3.64583 6.78516H9.47917C9.62421 6.78516 9.76331 6.72589 9.86587 6.6204C9.96843 6.51491 10.026 6.37184 10.026 6.22266C10.026 6.07347 9.96843 5.9304 9.86587 5.82491C9.76331 5.71942 9.62421 5.66016 9.47917 5.66016H3.64583ZM3.64583 8.66016C3.50079 8.66016 3.36169 8.71942 3.25913 8.82491C3.15658 8.9304 3.09896 9.07347 3.09896 9.22266C3.09896 9.37184 3.15658 9.51491 3.25913 9.6204C3.36169 9.72589 3.50079 9.78516 3.64583 9.78516H7.29167C7.43671 9.78516 7.57581 9.72589 7.67837 9.6204C7.78092 9.51491 7.83854 9.37184 7.83854 9.22266C7.83854 9.07347 7.78092 8.9304 7.67837 8.82491C7.57581 8.71942 7.43671 8.66016 7.29167 8.66016H3.64583Z"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },

  client: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="15"
        height="16"
        viewBox="0 0 15 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M0 4.2125C0 3.551 0 3.2195 0.0524999 2.9435C0.164604 2.35091 0.452709 1.80512 0.879229 1.37874C1.30575 0.952353 1.85088 0.664418 2.4435 0.5525C2.7195 0.5 3.05025 0.5 3.7125 0.5C4.002 0.5 4.1475 0.5 4.287 0.51275C4.8877 0.568958 5.4575 0.80498 5.922 1.19C6.03 1.28 6.132 1.382 6.3375 1.5875L6.76256 2.01254C7.3662 2.61546 7.67051 2.91939 8.034 3.12125C8.23516 3.23337 8.44857 3.32195 8.67 3.38525C9.0735 3.5 9.50625 3.5 10.371 3.5H10.6515C12.6255 3.5 13.6133 3.5 14.2545 4.07675C14.3135 4.12998 14.3695 4.18631 14.4225 4.2455C15 4.88675 15 5.8745 15 7.8485V9.5C15 12.3282 15 13.7427 14.121 14.621C13.2427 15.5 11.8282 15.5 9 15.5H6C3.17175 15.5 1.75725 15.5 0.879 14.621C0 13.7427 0 12.3282 0 9.5V4.2125Z"
          fill={color ?? "#383D44"}
        />
        <path
          d="M11.2388 1.265C11.124 1.25 10.986 1.25 10.7115 1.25H7.5L7.77675 1.53725C8.27625 2.05475 8.46825 2.24825 8.69025 2.37575C8.81842 2.44976 8.95486 2.50842 9.09675 2.5505C9.3405 2.6225 9.609 2.62625 10.3155 2.62625H10.566C11.3175 2.62625 11.9235 2.62625 12.4035 2.68925C12.5197 2.70387 12.6351 2.72414 12.7493 2.75C12.6098 1.97225 12.0023 1.37 11.2388 1.265Z"
          fill={color ?? "#383D44"}
        />
        <path
          d="M5.20909 9.03636C5.67201 9.03636 6.11598 8.85247 6.44331 8.52513C6.77065 8.1978 6.95455 7.75383 6.95455 7.29091C6.95455 6.82799 6.77065 6.38402 6.44331 6.05669C6.11598 5.72935 5.67201 5.54545 5.20909 5.54545C4.74617 5.54545 4.3022 5.72935 3.97487 6.05669C3.64753 6.38402 3.46364 6.82799 3.46364 7.29091C3.46364 7.75383 3.64753 8.1978 3.97487 8.52513C4.3022 8.85247 4.74617 9.03636 5.20909 9.03636ZM3.57273 9.90909C3.31233 9.90909 3.0626 10.0125 2.87848 10.1967C2.69435 10.3808 2.59091 10.6305 2.59091 10.8909V11C2.59091 11 2.59091 12.9636 5.20909 12.9636C7.82727 12.9636 7.82727 11 7.82727 11V10.8909C7.82727 10.6305 7.72383 10.3808 7.53971 10.1967C7.35558 10.0125 7.10585 9.90909 6.84545 9.90909H3.57273Z"
          fill="white"
        />
      </svg>
    );
  },
  "gradient-template-outlined": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        width="17"
        height="17"
        viewBox="0 0 17 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M1 2.22716C1 1.99908 1.09513 1.78035 1.26448 1.61907C1.43382 1.45779 1.66349 1.36719 1.90297 1.36719H14.5446C14.7841 1.36719 15.0138 1.45779 15.1831 1.61907C15.3525 1.78035 15.4476 1.99908 15.4476 2.22716V3.94711C15.4476 4.17519 15.3525 4.39393 15.1831 4.55521C15.0138 4.71648 14.7841 4.80709 14.5446 4.80709H1.90297C1.66349 4.80709 1.43382 4.71648 1.26448 4.55521C1.09513 4.39393 1 4.17519 1 3.94711V2.22716ZM1 9.10696C1 8.87888 1.09513 8.66015 1.26448 8.49887C1.43382 8.33759 1.66349 8.24699 1.90297 8.24699H7.32082C7.5603 8.24699 7.78998 8.33759 7.95932 8.49887C8.12866 8.66015 8.22379 8.87888 8.22379 9.10696V14.2668C8.22379 14.4949 8.12866 14.7136 7.95932 14.8749C7.78998 15.0362 7.5603 15.1268 7.32082 15.1268H1.90297C1.66349 15.1268 1.43382 15.0362 1.26448 14.8749C1.09513 14.7136 1 14.4949 1 14.2668V9.10696ZM11.8357 9.10696C11.8357 8.87888 11.9308 8.66015 12.1002 8.49887C12.2695 8.33759 12.4992 8.24699 12.7387 8.24699H14.5446C14.7841 8.24699 15.0138 8.33759 15.1831 8.49887C15.3525 8.66015 15.4476 8.87888 15.4476 9.10696V14.2668C15.4476 14.4949 15.3525 14.7136 15.1831 14.8749C15.0138 15.0362 14.7841 15.1268 14.5446 15.1268H12.7387C12.4992 15.1268 12.2695 15.0362 12.1002 14.8749C11.9308 14.7136 11.8357 14.4949 11.8357 14.2668V9.10696Z"
          stroke="url(#paint0_linear_2240_34232)"
          strokeWidth="1.80595"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <defs>
          <linearGradient
            id="paint0_linear_2240_34232"
            x1="1.07894"
            y1="1.36719"
            x2="17.0719"
            y2="4.19017"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  "gradient-template": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        width="16"
        height="16"
        viewBox="0 0 16 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M1 2.16536C1 1.94435 1.09219 1.73239 1.25628 1.57611C1.42038 1.41983 1.64294 1.33203 1.875 1.33203H14.125C14.3571 1.33203 14.5796 1.41983 14.7437 1.57611C14.9078 1.73239 15 1.94435 15 2.16536V3.83203C15 4.05304 14.9078 4.26501 14.7437 4.42129C14.5796 4.57757 14.3571 4.66536 14.125 4.66536H1.875C1.64294 4.66536 1.42038 4.57757 1.25628 4.42129C1.09219 4.26501 1 4.05304 1 3.83203V2.16536ZM1 8.83203C1 8.61102 1.09219 8.39906 1.25628 8.24278C1.42038 8.0865 1.64294 7.9987 1.875 7.9987H7.125C7.35706 7.9987 7.57962 8.0865 7.74372 8.24278C7.90781 8.39906 8 8.61102 8 8.83203V13.832C8 14.053 7.90781 14.265 7.74372 14.4213C7.57962 14.5776 7.35706 14.6654 7.125 14.6654H1.875C1.64294 14.6654 1.42038 14.5776 1.25628 14.4213C1.09219 14.265 1 14.053 1 13.832V8.83203ZM11.5 8.83203C11.5 8.61102 11.5922 8.39906 11.7563 8.24278C11.9204 8.0865 12.1429 7.9987 12.375 7.9987H14.125C14.3571 7.9987 14.5796 8.0865 14.7437 8.24278C14.9078 8.39906 15 8.61102 15 8.83203V13.832C15 14.053 14.9078 14.265 14.7437 14.4213C14.5796 14.5776 14.3571 14.6654 14.125 14.6654H12.375C12.1429 14.6654 11.9204 14.5776 11.7563 14.4213C11.5922 14.265 11.5 14.053 11.5 13.832V8.83203Z"
          fill="url(#paint0_linear_2240_34388)"
          stroke="url(#paint1_linear_2240_34388)"
          strokeWidth="1.75"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <defs>
          <linearGradient
            id="paint0_linear_2240_34388"
            x1="1.42778"
            y1="2.60187"
            x2="14.5836"
            y2="3.1293"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#A045FB"} />
            <stop offset="0.875" stopColor={to ?? "#4822E4"} />
          </linearGradient>
          <linearGradient
            id="paint1_linear_2240_34388"
            x1="1.42778"
            y1="2.60187"
            x2="14.5836"
            y2="3.1293"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#A045FB"} />
            <stop offset="0.875" stopColor={to ?? "#4822E4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  "gradient-dashboard-outlined": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        width="17"
        height="17"
        viewBox="0 0 17 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M5.92398 3.46199C5.92398 4.82171 4.82171 5.92398 3.46199 5.92398C2.10227 5.92398 1 4.82171 1 3.46199C1 2.10227 2.10227 1 3.46199 1C4.82171 1 5.92398 2.10227 5.92398 3.46199Z"
          stroke="url(#paint0_linear_2240_34267)"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M15.3658 3.46199C15.3658 4.82171 14.2635 5.92398 12.9038 5.92398C11.544 5.92398 10.4418 4.82171 10.4418 3.46199C10.4418 2.10227 11.544 1 12.9038 1C14.2635 1 15.3658 2.10227 15.3658 3.46199Z"
          stroke="url(#paint1_linear_2240_34267)"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M5.92398 12.9034C5.92398 14.2631 4.82171 15.3654 3.46199 15.3654C2.10227 15.3654 1 14.2631 1 12.9034C1 11.5437 2.10227 10.4414 3.46199 10.4414C4.82171 10.4414 5.92398 11.5437 5.92398 12.9034Z"
          stroke="url(#paint2_linear_2240_34267)"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M15.3658 12.9034C15.3658 14.2631 14.2635 15.3654 12.9038 15.3654C11.544 15.3654 10.4418 14.2631 10.4418 12.9034C10.4418 11.5437 11.544 10.4414 12.9038 10.4414C14.2635 10.4414 15.3658 11.5437 15.3658 12.9034Z"
          stroke="url(#paint3_linear_2240_34267)"
          strokeWidth="2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <defs>
          <linearGradient
            id="paint0_linear_2240_34267"
            x1="0.0378295"
            y1="-6.66417e-07"
            x2="7.72404"
            y2="1.29212"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
          <linearGradient
            id="paint1_linear_2240_34267"
            x1="9.4796"
            y1="-6.66417e-07"
            x2="17.1658"
            y2="1.29212"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
          <linearGradient
            id="paint2_linear_2240_34267"
            x1="0.0378295"
            y1="9.44141"
            x2="7.72404"
            y2="10.7335"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
          <linearGradient
            id="paint3_linear_2240_34267"
            x1="9.4796"
            y1="9.44141"
            x2="17.1658"
            y2="10.7335"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  "gradient-dashboard": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        width="17"
        height="17"
        viewBox="0 0 17 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M3.46199 6.92398C5.37399 6.92398 6.92398 5.37399 6.92398 3.46199C6.92398 1.54999 5.37399 0 3.46199 0C1.54999 0 0 1.54999 0 3.46199C0 5.37399 1.54999 6.92398 3.46199 6.92398Z"
          fill="url(#paint0_linear_2240_34225)"
        />
        <path
          d="M12.9039 6.92398C14.8159 6.92398 16.3659 5.37399 16.3659 3.46199C16.3659 1.54999 14.8159 0 12.9039 0C10.9919 0 9.44189 1.54999 9.44189 3.46199C9.44189 5.37399 10.9919 6.92398 12.9039 6.92398Z"
          fill="url(#paint1_linear_2240_34225)"
        />
        <path
          d="M3.46199 16.3654C5.37399 16.3654 6.92398 14.8154 6.92398 12.9034C6.92398 10.9914 5.37399 9.44141 3.46199 9.44141C1.54999 9.44141 0 10.9914 0 12.9034C0 14.8154 1.54999 16.3654 3.46199 16.3654Z"
          fill="url(#paint2_linear_2240_34225)"
        />
        <path
          d="M12.9039 16.3654C14.8159 16.3654 16.3659 14.8154 16.3659 12.9034C16.3659 10.9914 14.8159 9.44141 12.9039 9.44141C10.9919 9.44141 9.44189 10.9914 9.44189 12.9034C9.44189 14.8154 10.9919 16.3654 12.9039 16.3654Z"
          fill="url(#paint3_linear_2240_34225)"
        />
        <defs>
          <linearGradient
            id="paint0_linear_2240_34225"
            x1="0.0378295"
            y1="-6.66417e-07"
            x2="7.72404"
            y2="1.29212"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
          <linearGradient
            id="paint1_linear_2240_34225"
            x1="9.47972"
            y1="-6.66417e-07"
            x2="17.1659"
            y2="1.29212"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
          <linearGradient
            id="paint2_linear_2240_34225"
            x1="0.0378295"
            y1="9.44141"
            x2="7.72404"
            y2="10.7335"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
          <linearGradient
            id="paint3_linear_2240_34225"
            x1="9.47972"
            y1="9.44141"
            x2="17.1659"
            y2="10.7335"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  logout: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="12"
        height="16"
        viewBox="0 0 12 16"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M8.24768 1.25H2.24768C1.84986 1.25 1.46832 1.40804 1.18702 1.68934C0.905716 1.97064 0.747681 2.35218 0.747681 2.75V13.25C0.747681 13.6478 0.905716 14.0294 1.18702 14.3107C1.46832 14.592 1.84986 14.75 2.24768 14.75H8.24768M11.2477 8L8.24768 5M11.2477 8L8.24768 11M11.2477 8H3.74768"
          stroke={color ?? "#A3A7AF"}
          strokeWidth="1.2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  setting: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="18"
        height="18"
        viewBox="0 0 18 18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M7.50391 3.23775C7.81352 1.92075 9.62897 1.92075 9.93858 3.23775C9.98503 3.4356 10.0761 3.61933 10.2044 3.774C10.3326 3.92867 10.4945 4.04989 10.6767 4.12781C10.859 4.20573 11.0565 4.23814 11.2531 4.2224C11.4498 4.20667 11.6401 4.14323 11.8085 4.03725C12.9299 3.33225 14.2141 4.65675 13.531 5.81475C13.4284 5.98849 13.3671 6.18475 13.3518 6.38758C13.3366 6.59041 13.368 6.79408 13.4434 6.98204C13.5188 7.16999 13.6362 7.33693 13.7859 7.46929C13.9356 7.60165 14.1134 7.69568 14.305 7.74375C15.5812 8.06325 15.5812 9.93675 14.305 10.2563C14.1133 10.3042 13.9352 10.3982 13.7853 10.5305C13.6355 10.6629 13.518 10.8299 13.4425 11.018C13.367 11.2061 13.3356 11.4099 13.3508 11.6128C13.3661 11.8158 13.4276 12.0122 13.5302 12.186C14.2134 13.3433 12.9299 14.6685 11.8078 13.9635C11.6395 13.8577 11.4493 13.7943 11.2527 13.7786C11.0562 13.7629 10.8588 13.7953 10.6767 13.8731C10.4946 13.951 10.3328 14.0721 10.2045 14.2265C10.0763 14.381 9.98516 14.5646 9.93858 14.7623C9.62897 16.0793 7.81352 16.0793 7.50391 14.7623C7.45746 14.5644 7.36639 14.3807 7.23813 14.226C7.10986 14.0713 6.94802 13.9501 6.76577 13.8722C6.58353 13.7943 6.38603 13.7619 6.18935 13.7776C5.99267 13.7933 5.80238 13.8568 5.63395 13.9628C4.51255 14.6678 3.22835 13.3433 3.91151 12.1853C4.01406 12.0115 4.07544 11.8152 4.09065 11.6124C4.10586 11.4096 4.07449 11.2059 3.99907 11.018C3.92365 10.83 3.80632 10.6631 3.65662 10.5307C3.50691 10.3984 3.32906 10.3043 3.13751 10.2563C1.86131 9.93675 1.86131 8.06325 3.13751 7.74375C3.32923 7.69581 3.50727 7.60183 3.65715 7.46947C3.80702 7.3371 3.92449 7.17008 3.99999 6.98201C4.0755 6.79394 4.1069 6.59013 4.09166 6.38716C4.07641 6.1842 4.01493 5.98781 3.91224 5.814C3.22908 4.65675 4.51255 3.3315 5.63467 4.0365C6.36144 4.4925 7.30333 4.089 7.50391 3.23775Z"
          stroke={color ?? "#A3A7AF"}
          strokeWidth="1.2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M6.54108 9C6.54108 9.59674 6.77079 10.169 7.17967 10.591C7.58855 11.0129 8.14312 11.25 8.72137 11.25C9.29962 11.25 9.85419 11.0129 10.2631 10.591C10.672 10.169 10.9017 9.59674 10.9017 9C10.9017 8.40326 10.672 7.83097 10.2631 7.40901C9.85419 6.98705 9.29962 6.75 8.72137 6.75C8.14312 6.75 7.58855 6.98705 7.17967 7.40901C6.77079 7.83097 6.54108 8.40326 6.54108 9Z"
          stroke={color ?? "#A3A7AF"}
          strokeWidth="1.2"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  help: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="16"
        height="17"
        viewBox="0 0 16 17"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M7.89542 11.1508C9.4183 11.1508 10.6528 9.85262 10.6528 8.25119C10.6528 6.64977 9.4183 5.35156 7.89542 5.35156C6.37254 5.35156 5.138 6.64977 5.138 8.25119C5.138 9.85262 6.37254 11.1508 7.89542 11.1508Z"
          stroke={color ?? "#A3A7AF"}
          strokeWidth="1.2"
        />
        <path
          d="M9.96258 6.07541L12.72 3.17578M3.06903 13.3245L5.82645 10.4249M5.82645 6.07541L3.06903 3.17578M12.72 13.3245L9.96258 10.4249"
          stroke={color ?? "#A3A7AF"}
          strokeWidth="1.2"
        />
        <path
          d="M6.11095 1.24743C7.27963 0.917033 8.51061 0.917534 9.67905 1.24888C13.3568 2.28549 15.5386 6.26017 14.5535 10.1268C13.5677 13.9942 9.78866 16.2885 6.11095 15.2526C2.43324 14.216 0.251435 10.2421 1.23652 6.3747C1.54776 5.14485 2.16278 4.02344 3.01919 3.12421"
          stroke={color ?? "#A3A7AF"}
          strokeWidth="1.2"
          strokeLinecap="round"
        />
      </svg>
    );
  },
  list: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="18"
        height="15"
        viewBox="0 0 18 15"
        fill="none"
        className={className}
      >
        <path
          d="M5.22075 1.37891H16.4421H5.22075ZM5.22075 7.49964H16.4421H5.22075ZM5.22075 13.6204H16.4421H5.22075ZM1.14026 1.37891V1.38911V1.37891ZM1.14026 7.49964V7.50984V7.49964ZM1.14026 13.6204V13.6306V13.6204Z"
          fill={color ?? "#CEDEF6"}
        />
        <path
          d="M5.22075 1.37891H16.4421M5.22075 7.49964H16.4421M5.22075 13.6204H16.4421M1.14026 1.37891V1.38911M1.14026 7.49964V7.50984M1.14026 13.6204V13.6306"
          stroke={color ?? "#CEDEF6"}
          strokeWidth="2.04024"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  tile: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="17"
        height="17"
        viewBox="0 0 17 17"
        fill="none"
        className={className}
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M2.64024 0.154297C2.04671 0.154297 1.47749 0.390074 1.05781 0.80976C0.638121 1.22945 0.402344 1.79866 0.402344 2.39219V4.87873C0.402344 5.47226 0.638121 6.04148 1.05781 6.46116C1.47749 6.88085 2.04671 7.11663 2.64024 7.11663H5.12678C5.72031 7.11663 6.28952 6.88085 6.70921 6.46116C7.1289 6.04148 7.36467 5.47226 7.36467 4.87873V2.39219C7.36467 1.79866 7.1289 1.22945 6.70921 0.80976C6.28952 0.390074 5.72031 0.154297 5.12678 0.154297H2.64024ZM2.64024 9.10586C2.04671 9.10586 1.47749 9.34164 1.05781 9.76133C0.638121 10.181 0.402344 10.7502 0.402344 11.3438V13.8303C0.402344 14.4238 0.638121 14.993 1.05781 15.4127C1.47749 15.8324 2.04671 16.0682 2.64024 16.0682H5.12678C5.72031 16.0682 6.28952 15.8324 6.70921 15.4127C7.1289 14.993 7.36467 14.4238 7.36467 13.8303V11.3438C7.36467 10.7502 7.1289 10.181 6.70921 9.76133C6.28952 9.34164 5.72031 9.10586 5.12678 9.10586H2.64024ZM11.5918 0.154297C10.9983 0.154297 10.4291 0.390074 10.0094 0.80976C9.58969 1.22945 9.35391 1.79866 9.35391 2.39219V4.87873C9.35391 5.47226 9.58969 6.04148 10.0094 6.46116C10.4291 6.88085 10.9983 7.11663 11.5918 7.11663H14.0783C14.6719 7.11663 15.2411 6.88085 15.6608 6.46116C16.0805 6.04148 16.3162 5.47226 16.3162 4.87873V2.39219C16.3162 1.79866 16.0805 1.22945 15.6608 0.80976C15.2411 0.390074 14.6719 0.154297 14.0783 0.154297H11.5918ZM11.5918 9.10586C10.9983 9.10586 10.4291 9.34164 10.0094 9.76133C9.58969 10.181 9.35391 10.7502 9.35391 11.3438V13.8303C9.35391 14.4238 9.58969 14.993 10.0094 15.4127C10.4291 15.8324 10.9983 16.0682 11.5918 16.0682H14.0783C14.6719 16.0682 15.2411 15.8324 15.6608 15.4127C16.0805 14.993 16.3162 14.4238 16.3162 13.8303V11.3438C16.3162 10.7502 16.0805 10.181 15.6608 9.76133C15.2411 9.34164 14.6719 9.10586 14.0783 9.10586H11.5918Z"
          fill={color ?? "#CEDEF6"}
        />
      </svg>
    );
  },
  "gradient-folder": ({ className, fill }) => {
    const { from, to } =
      typeof fill === "string" ? { from: fill, to: fill } : fill || {};
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="7"
        height="8"
        viewBox="0 0 7 8"
        fill="none"
        className={className}
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M0.0221757 1.86415C-2.12428e-08 1.98073 0 2.12076 0 2.40017V4.63358C0 5.82822 -3.7765e-08 6.4257 0.371285 6.79667C0.742253 7.16795 1.33973 7.16795 2.53437 7.16795H3.80155C4.99619 7.16795 5.59367 7.16795 5.96463 6.79667C6.33592 6.4257 6.33592 5.82822 6.33592 4.63358V3.936C6.33592 3.10219 6.33592 2.68497 6.09199 2.41411C6.06961 2.38911 6.04593 2.36531 6.02103 2.34283C5.75016 2.09922 5.33294 2.09922 4.49914 2.09922H4.38066C4.01539 2.09922 3.8326 2.09922 3.66216 2.05075C3.56863 2.02401 3.47849 1.98659 3.39352 1.93923C3.23892 1.85338 3.10967 1.72381 2.85116 1.46562L2.67693 1.29139C2.59012 1.20458 2.54704 1.1615 2.50142 1.12348C2.30522 0.960853 2.06454 0.861159 1.81081 0.837417C1.75188 0.832031 1.69042 0.832031 1.56814 0.832031C1.28841 0.832031 1.1487 0.832031 1.03212 0.854207C0.781802 0.90148 0.551542 1.0231 0.371382 1.20321C0.191222 1.38331 0.0695277 1.61385 0.0221757 1.86415ZM4.52448 1.14883C4.64043 1.14883 4.69872 1.14883 4.74719 1.15516C5.06969 1.19951 5.32629 1.4539 5.38522 1.78242C5.33698 1.7715 5.28824 1.76293 5.23917 1.75676C5.03642 1.73015 4.78045 1.73015 4.46302 1.73015H4.35721C4.05879 1.73015 3.94538 1.72856 3.84242 1.69815C3.78248 1.68038 3.72485 1.6556 3.67072 1.62434C3.57694 1.57048 3.49584 1.48875 3.28486 1.27016L3.16796 1.14883H4.52511H4.52448ZM3.48476 3.1288C3.42174 3.1288 3.36131 3.15383 3.31675 3.19839C3.27219 3.24295 3.24716 3.30338 3.24716 3.3664C3.24716 3.42941 3.27219 3.48985 3.31675 3.53441C3.36131 3.57896 3.42174 3.604 3.48476 3.604H5.06874C5.13175 3.604 5.19218 3.57896 5.23674 3.53441C5.2813 3.48985 5.30633 3.42941 5.30633 3.3664C5.30633 3.30338 5.2813 3.24295 5.23674 3.19839C5.19218 3.15383 5.13175 3.1288 5.06874 3.1288H3.48476Z"
          fill="url(#paint0_linear_3570_37122)"
        />
        <defs>
          <linearGradient
            id="paint0_linear_3570_37122"
            x1="0.0346166"
            y1="0.832031"
            x2="7.06803"
            y2="2.01441"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor={from ?? "#095AD3"} />
            <stop offset="1" stopColor={to ?? "#166FF4"} />
          </linearGradient>
        </defs>
      </svg>
    );
  },
  folder: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="26"
        height="26"
        viewBox="0 0 26 26"
        fill="none"
        className={className}
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M2.24185 5.69552C2.16602 6.09418 2.16602 6.57302 2.16602 7.52852V15.166C2.16602 19.2513 2.16602 21.2944 3.43568 22.563C4.70427 23.8327 6.74743 23.8327 10.8327 23.8327H15.166C19.2513 23.8327 21.2944 23.8327 22.563 22.563C23.8327 21.2944 23.8327 19.2513 23.8327 15.166V12.7805C23.8327 9.92918 23.8327 8.50243 22.9985 7.57618C22.922 7.49068 22.841 7.40932 22.7558 7.33243C21.8296 6.49935 20.4028 6.49935 17.5515 6.49935H17.1463C15.8973 6.49935 15.2722 6.49935 14.6894 6.3336C14.3695 6.24217 14.0613 6.11422 13.7707 5.95227C13.242 5.65868 12.8 5.2156 11.916 4.33268L11.3202 3.73685C11.0233 3.44002 10.876 3.29268 10.72 3.16268C10.0491 2.60654 9.22603 2.26562 8.35835 2.18443C8.15685 2.16602 7.94668 2.16602 7.52852 2.16602C6.57193 2.16602 6.09418 2.16602 5.69552 2.24185C4.83951 2.40351 4.0521 2.81941 3.43601 3.4353C2.81993 4.0512 2.40378 4.83956 2.24185 5.69552ZM17.6382 3.24935C18.0347 3.24935 18.234 3.24935 18.3998 3.27102C19.5026 3.42268 20.3801 4.2926 20.5816 5.41602C20.4167 5.37867 20.25 5.34938 20.0822 5.32827C19.3888 5.23727 18.5135 5.23727 17.428 5.23727H17.0662C16.0457 5.23727 15.6578 5.23185 15.3058 5.12785C15.1008 5.06707 14.9037 4.98234 14.7186 4.87543C14.3979 4.69127 14.1206 4.41177 13.3991 3.66427L12.9993 3.24935H17.6404H17.6382ZM14.0827 10.0202C13.8672 10.0202 13.6605 10.1058 13.5082 10.2582C13.3558 10.4105 13.2702 10.6172 13.2702 10.8327C13.2702 11.0482 13.3558 11.2548 13.5082 11.4072C13.6605 11.5596 13.8672 11.6452 14.0827 11.6452H19.4993C19.7148 11.6452 19.9215 11.5596 20.0739 11.4072C20.2262 11.2548 20.3118 11.0482 20.3118 10.8327C20.3118 10.6172 20.2262 10.4105 20.0739 10.2582C19.9215 10.1058 19.7148 10.0202 19.4993 10.0202H14.0827Z"
          fill={color ?? "#A3A7AF"}
        />
      </svg>
    );
  },
  arrow: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="15"
        height="14"
        viewBox="0 0 15 14"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M8.30732 13.0675C8.24921 13.0095 8.20311 12.9406 8.17166 12.8647C8.14021 12.7888 8.12402 12.7075 8.12402 12.6253C8.12402 12.5432 8.14021 12.4619 8.17166 12.386C8.20311 12.3101 8.24921 12.2412 8.30732 12.1832L12.8659 7.62535L0.624509 7.62535C0.458749 7.62535 0.299777 7.5595 0.182566 7.44229C0.065356 7.32508 -0.000491423 7.16611 -0.000491415 7.00035C-0.000491408 6.83459 0.065356 6.67562 0.182566 6.55841C0.299777 6.44119 0.458749 6.37535 0.624509 6.37535L12.8659 6.37535L8.30732 1.81753C8.19004 1.70026 8.12416 1.5412 8.12416 1.37535C8.12416 1.20949 8.19004 1.05044 8.30732 0.93316C8.4246 0.815884 8.58366 0.75 8.74951 0.75C8.91536 0.75 9.07442 0.815884 9.1917 0.93316L14.8167 6.55816C14.8748 6.61621 14.9209 6.68514 14.9524 6.76101C14.9838 6.83688 15 6.91821 15 7.00035C15 7.08248 14.9838 7.16381 14.9524 7.23969C14.9209 7.31556 14.8748 7.38449 14.8167 7.44254L9.1917 13.0675C9.13365 13.1256 9.06472 13.1717 8.98885 13.2032C8.91297 13.2347 8.83164 13.2508 8.74951 13.2508C8.66737 13.2508 8.58604 13.2347 8.51017 13.2032C8.4343 13.1717 8.36537 13.1256 8.30732 13.0675Z"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },
  save: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="19"
        height="18"
        viewBox="0 0 19 18"
        fill="none"
        className={className}
      >
        <path
          d="M2.83682 0.119629C2.21706 0.119629 1.62268 0.365829 1.18444 0.804069C0.7462 1.24231 0.5 1.83669 0.5 2.45645V14.1406C0.5 14.7603 0.7462 15.3547 1.18444 15.793C1.62268 16.2312 2.21706 16.4774 2.83682 16.4774H6.34673C6.35491 16.3442 6.37594 16.2087 6.40983 16.072L6.60028 15.309H4.00524V10.0511C4.00524 9.89619 4.06679 9.74759 4.17635 9.63803C4.28591 9.52847 4.4345 9.46693 4.58944 9.46693H10.9503L12.1187 8.29851H4.58944C4.12462 8.29851 3.67883 8.48316 3.35015 8.81184C3.02147 9.14052 2.83682 9.58631 2.83682 10.0511V15.309C2.52694 15.309 2.22975 15.1859 2.01063 14.9668C1.79151 14.7476 1.66841 14.4505 1.66841 14.1406V2.45645C1.66841 2.14657 1.79151 1.84938 2.01063 1.63026C2.22975 1.41114 2.52694 1.28804 2.83682 1.28804H4.00524V4.20907C4.00524 4.67389 4.18989 5.11968 4.51857 5.44836C4.84725 5.77704 5.29303 5.96169 5.75785 5.96169H10.4315C10.8963 5.96169 11.3421 5.77704 11.6708 5.44836C11.9995 5.11968 12.1841 4.67389 12.1841 4.20907V1.28804H12.6269C12.9368 1.28811 13.2339 1.41125 13.453 1.63039L15.347 3.52438C15.5661 3.74345 15.6893 4.04059 15.6894 4.35045V5.96519C16.0847 5.94672 16.4803 5.99814 16.8578 6.11709V4.35162C16.8576 3.7319 16.6113 3.13762 16.1731 2.69948L14.2791 0.805487C14.0622 0.588266 13.8047 0.415893 13.5212 0.298212C13.2378 0.180531 12.9339 0.119848 12.6269 0.119629H2.83682ZM5.17365 4.20907V1.28804H11.0157V4.20907C11.0157 4.36401 10.9542 4.51261 10.8446 4.62217C10.735 4.73173 10.5864 4.79328 10.4315 4.79328H5.75785C5.60291 4.79328 5.45432 4.73173 5.34476 4.62217C5.2352 4.51261 5.17365 4.36401 5.17365 4.20907ZM14.2989 7.77039L8.65552 13.4138C8.32661 13.7426 8.09318 14.1545 7.98017 14.6056L7.54202 16.3559C7.49881 16.53 7.50136 16.7123 7.54942 16.8851C7.59748 17.0579 7.68942 17.2153 7.81631 17.3421C7.94319 17.4688 8.10071 17.5606 8.27356 17.6085C8.4464 17.6564 8.6287 17.6588 8.80274 17.6154L10.553 17.1784C11.0042 17.0656 11.4162 16.8322 11.7448 16.5031L17.3882 10.8597C17.7927 10.4488 18.0183 9.89467 18.016 9.31813C18.0136 8.74158 17.7835 8.18933 17.3757 7.78173C16.968 7.37412 16.4156 7.14421 15.8391 7.14208C15.2625 7.13996 14.7085 7.3658 14.2978 7.77039H14.2989Z"
          fill={color ?? "#fff"}
        />
      </svg>
    );
  },
  export: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="17"
        height="18"
        viewBox="0 0 17 18"
        fill="none"
        className={className}
      >
        <path
          d="M16.0184 10.0747C16.0184 12.4591 14.4288 16.4331 8.86515 16.4331C3.30152 16.4331 1.71191 12.4591 1.71191 10.0747"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.62139"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M8.86816 1.37207V12.4594"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.62139"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M4.09668 6.10086L8.8655 1.33203L13.6343 6.10086"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.62139"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  brain: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="40"
        height="40"
        viewBox="0 0 40 40"
        fill="none"
        className={className}
      >
        <path
          d="M15.0015 20.9995C14.565 21.0002 14.1339 21.0961 13.7383 21.2805C13.3427 21.465 12.9921 21.7335 12.711 22.0675C12.4299 22.4014 12.225 22.7926 12.1108 23.2139C11.9965 23.6352 11.9755 24.0763 12.0493 24.5065C12.1231 24.9367 12.2899 25.3457 12.538 25.7048C12.7862 26.0639 13.1097 26.3645 13.486 26.5857C13.8623 26.8068 14.2824 26.9432 14.7168 26.9853C15.1513 27.0274 15.5897 26.9741 16.0015 26.8293"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.5"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M12.2654 22.6046C11.6669 22.3165 11.1497 21.8839 10.7602 21.3459C10.3708 20.8078 10.1215 20.1813 10.0347 19.5228C9.94801 18.8643 10.0266 18.1946 10.2635 17.5741C10.5003 16.9536 10.8879 16.4018 11.3914 15.9686M11.4214 15.8876C11.0934 15.3968 10.9497 14.8059 11.0156 14.2193C11.0815 13.6328 11.3528 13.0885 11.7816 12.6827C12.2103 12.277 12.7687 12.0361 13.358 12.0026C13.9473 11.969 14.5294 12.1451 15.0014 12.4996M15.2394 12.5646C15.0799 12.2256 14.9985 11.8552 15.0015 11.4806C15.0044 11.1059 15.0914 10.7368 15.2562 10.4004C15.421 10.0639 15.6593 9.76882 15.9534 9.53686C16.2476 9.30491 16.5902 9.14203 16.9557 9.06027C17.3213 8.97851 17.7006 8.97995 18.0656 9.0645C18.4305 9.14904 18.7718 9.31452 19.0642 9.54871C19.3566 9.7829 19.5926 10.0798 19.7549 10.4175C19.9171 10.7552 20.0013 11.125 20.0014 11.4996M20.0014 11.4996V26.9996M20.0014 11.4996C20.0014 11.125 20.0857 10.7552 20.2479 10.4175C20.4101 10.0798 20.6461 9.7829 20.9385 9.54871C21.2309 9.31452 21.5722 9.14904 21.9372 9.0645C22.3021 8.97995 22.6814 8.97851 23.047 9.06027C23.4126 9.14203 23.7551 9.30491 24.0493 9.53686C24.3435 9.76882 24.5818 10.0639 24.7465 10.4004C24.9113 10.7368 24.9984 11.1059 25.0013 11.4806C25.0042 11.8552 24.9229 12.2256 24.7634 12.5646M20.0014 26.9996C20.0014 27.53 19.7907 28.0387 19.4156 28.4138C19.0405 28.7889 18.5318 28.9996 18.0014 28.9996C17.4709 28.9996 16.9622 28.7889 16.5872 28.4138C16.2121 28.0387 16.0014 27.53 16.0014 26.9996M20.0014 26.9996C20.0014 27.53 20.2121 28.0387 20.5872 28.4138C20.9622 28.7889 21.4709 28.9996 22.0014 28.9996M20.0014 13.9996C20.0014 14.7952 20.3174 15.5583 20.8801 16.1209C21.4427 16.6835 22.2057 16.9996 23.0014 16.9996M28.6114 15.9686C29.048 16.3437 29.3983 16.8087 29.6382 17.3319C29.8781 17.8551 30.002 18.424 30.0014 18.9996C30.0014 19.7026 29.8204 20.3636 29.5014 20.9376M28.5814 15.8876C28.9093 15.3968 29.0531 14.8059 28.9872 14.2193C28.9212 13.6328 28.6499 13.0885 28.2212 12.6827C27.7925 12.277 27.2341 12.0361 26.6448 12.0026C26.0555 11.969 25.4733 12.1451 25.0014 12.4996M26.6684 22.9996L25.0014 25.9996H29.0014L27.3344 28.9996"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.5"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  variable: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="40"
        height="40"
        viewBox="0 0 40 40"
        fill="none"
        className={className}
      >
        <rect
          x="7.8"
          y="14.7995"
          width="24.4"
          height="11.4"
          rx="1.49412"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.6"
        />
        <path
          d="M13.8813 23.1762H12.3519C11.9295 23.1762 11.5872 22.8338 11.5872 22.4115V18.5879C11.5872 18.1656 11.9295 17.8232 12.3519 17.8232H13.8813"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.6"
        />
        <path
          d="M26.1192 23.1762H27.6486C28.071 23.1762 28.4133 22.8338 28.4133 22.4115V18.5879C28.4133 18.1656 28.071 17.8232 27.6486 17.8232H26.1192"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.6"
        />
      </svg>
    );
  },
  indexing: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="40"
        height="40"
        viewBox="0 0 40 40"
        fill="none"
        className={className}
      >
        <path
          d="M25.7458 17.7587V10.9985C25.7458 11.9314 24.9887 12.6886 24.0558 12.6886H23.492M27.9997 17.7587H23.492M24.7386 25.3207H25.6255C26.1264 25.3074 26.6023 25.0991 26.9519 24.7401C27.3015 24.3811 27.4971 23.8998 27.4971 23.3987C27.4971 22.8977 27.3015 22.4164 26.9519 22.0574C26.6023 21.6984 26.1264 21.4901 25.6255 21.4768H24.7386C24.2377 21.4901 23.7617 21.6984 23.4122 22.0574C23.0626 22.4164 22.8669 22.8977 22.8669 23.3987C22.8669 23.8998 23.0626 24.3811 23.4122 24.7401C23.7617 25.0991 24.2377 25.3074 24.7386 25.3207Z"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.35204"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M27.5482 23.2507V26.7998C27.5482 27.78 26.7532 28.575 25.7743 28.575H24.5913C24.224 28.575 23.8658 28.461 23.5661 28.2489C23.2663 28.0368 23.0397 27.7369 22.9175 27.3906M18.7599 25.1949L15.3798 28.575M15.3798 28.575L11.9998 25.1949M15.3798 28.575V10.9985"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.35204"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  comment: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="40"
        height="40"
        viewBox="0 0 40 40"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <g clipPath="url(#clip0_2612_152907)">
          <g clipPath="url(#clip1_2612_152907)">
            <path
              d="M21.8311 26.4186C25.2878 26.4186 27.0166 26.4186 28.0901 25.3443C29.1644 24.2709 29.1644 22.542 29.1644 19.0853C29.1644 15.6285 29.1644 13.8997 28.0901 12.8263C27.0166 11.752 25.2878 11.752 21.8311 11.752M11.9054 12.8263C10.8311 13.8997 10.8311 15.6285 10.8311 19.0853C10.8311 22.542 10.8311 24.2709 11.9054 25.3443C12.504 25.9438 13.3061 26.2087 14.4977 26.3251"
              stroke={color ?? "#095AD3"}
              strokeWidth="1.83333"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
            <path
              d="M21.8318 26.4175C20.6988 26.4175 19.4503 26.8758 18.3109 27.4671C16.4794 28.4176 15.5637 28.8934 15.1127 28.59C14.6617 28.2875 14.7469 27.3479 14.9183 25.4696L14.9568 25.0425"
              stroke={color ?? "#095AD3"}
              strokeWidth="1.83333"
              strokeLinecap="round"
            />
            <g clipPath="url(#clip2_2612_152907)">
              <path
                d="M22.4333 20.2997L22.6413 22.4702C22.6473 22.5327 22.6348 22.5956 22.6054 22.6511C22.576 22.7066 22.531 22.7522 22.4759 22.7824C22.4208 22.8125 22.358 22.8258 22.2955 22.8206C22.2329 22.8154 22.1732 22.792 22.1238 22.7532L20.4086 21.4069C20.1352 21.1922 19.9082 20.9242 19.7415 20.6191L14.9872 11.9262C14.814 11.6094 14.7737 11.2369 14.8752 10.8904C14.9767 10.544 15.2117 10.252 15.5284 10.0788C15.8452 9.90561 16.2177 9.86532 16.5642 9.96681C16.9106 10.0683 17.2026 10.3033 17.3758 10.62L22.1306 19.3131C22.2973 19.6181 22.4003 19.9537 22.4333 20.2997Z"
                fill={color ?? "#095AD3"}
              />
            </g>
          </g>
        </g>
      </svg>
    );
  },
  version: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="40"
        height="40"
        viewBox="0 0 40 40"
        fill="none"
        className={className}
      >
        <path
          d="M11.5289 20.1172V17.5877C11.5289 15.5752 12.3284 13.6451 13.7515 12.2221C15.1745 10.799 17.1046 9.99951 19.1172 9.99951C21.1297 9.99951 23.0598 10.799 24.4829 12.2221C25.9059 13.6451 26.7054 15.5752 26.7054 17.5877V20.1172M8.99951 27.7054C8.99951 28.3762 9.266 29.0196 9.74036 29.494C10.2147 29.9683 10.8581 30.2348 11.5289 30.2348C12.1998 30.2348 12.8431 29.9683 13.3175 29.494C13.7918 29.0196 14.0583 28.3762 14.0583 27.7054C14.0583 27.0346 13.7918 26.3912 13.3175 25.9168C12.8431 25.4425 12.1998 25.176 11.5289 25.176C10.8581 25.176 10.2147 25.4425 9.74036 25.9168C9.266 26.3912 8.99951 27.0346 8.99951 27.7054ZM24.176 27.7054C24.176 28.3762 24.4425 29.0196 24.9168 29.494C25.3912 29.9683 26.0346 30.2348 26.7054 30.2348C27.3762 30.2348 28.0196 29.9683 28.494 29.494C28.9683 29.0196 29.2348 28.3762 29.2348 27.7054C29.2348 27.0346 28.9683 26.3912 28.494 25.9168C28.0196 25.4425 27.3762 25.176 26.7054 25.176C26.0346 25.176 25.3912 25.4425 24.9168 25.9168C24.4425 26.3912 24.176 27.0346 24.176 27.7054Z"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.7"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M22.9114 16.3232L26.7055 20.1174L30.4996 16.3232"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.7"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  preview: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="25"
        height="24"
        viewBox="0 0 25 24"
        fill="none"
        className={className}
      >
        <path
          d="M14.0186 2.75C15.9256 2.75 17.2806 2.752 18.3086 2.89C19.3136 3.025 19.8936 3.279 20.3166 3.702C20.8036 4.189 21.0166 4.567 21.1336 5.24C21.2656 5.999 21.2686 7.08 21.2686 9C21.2686 9.19891 21.3476 9.38968 21.4882 9.53033C21.6289 9.67098 21.8196 9.75 22.0186 9.75C22.2175 9.75 22.4082 9.67098 22.5489 9.53033C22.6895 9.38968 22.7686 9.19891 22.7686 9V8.904C22.7686 7.104 22.7686 5.886 22.6106 4.982C22.4356 3.977 22.0616 3.326 21.3776 2.642C20.6286 1.892 19.6796 1.561 18.5076 1.403C17.3676 1.25 15.9126 1.25 14.0746 1.25H14.0186C13.8196 1.25 13.6289 1.32902 13.4882 1.46967C13.3476 1.61032 13.2686 1.80109 13.2686 2C13.2686 2.19891 13.3476 2.38968 13.4882 2.53033C13.6289 2.67098 13.8196 2.75 14.0186 2.75ZM2.01855 14.25C2.21747 14.25 2.40823 14.329 2.54888 14.4697C2.68954 14.6103 2.76855 14.8011 2.76855 15C2.76855 16.92 2.77155 18.001 2.90355 18.76C3.02155 19.433 3.23355 19.811 3.72055 20.298C4.14355 20.721 4.72356 20.975 5.72956 21.11C6.75756 21.248 8.11156 21.25 10.0186 21.25C10.2175 21.25 10.4082 21.329 10.5489 21.4697C10.6895 21.6103 10.7686 21.8011 10.7686 22C10.7686 22.1989 10.6895 22.3897 10.5489 22.5303C10.4082 22.671 10.2175 22.75 10.0186 22.75H9.96256C8.12456 22.75 6.66856 22.75 5.52956 22.597C4.35756 22.439 3.40856 22.107 2.65955 21.359C1.97555 20.674 1.60155 20.023 1.42655 19.018C1.26855 18.114 1.26855 16.895 1.26855 15.096V15C1.26855 14.8011 1.34757 14.6103 1.48822 14.4697C1.62888 14.329 1.81964 14.25 2.01855 14.25ZM22.0186 14.25C22.2175 14.25 22.4082 14.329 22.5489 14.4697C22.6895 14.6103 22.7686 14.8011 22.7686 15V15.096C22.7686 16.896 22.7686 18.114 22.6106 19.018C22.4356 20.023 22.0616 20.674 21.3776 21.358C20.6286 22.108 19.6796 22.439 18.5076 22.597C17.3676 22.75 15.9126 22.75 14.0746 22.75H14.0186C13.8196 22.75 13.6289 22.671 13.4882 22.5303C13.3476 22.3897 13.2686 22.1989 13.2686 22C13.2686 21.8011 13.3476 21.6103 13.4882 21.4697C13.6289 21.329 13.8196 21.25 14.0186 21.25C15.9256 21.25 17.2806 21.248 18.3086 21.11C19.3136 20.975 19.8936 20.721 20.3166 20.298C20.8036 19.811 21.0166 19.433 21.1336 18.76C21.2656 18.001 21.2686 16.92 21.2686 15C21.2686 14.8011 21.3476 14.6103 21.4882 14.4697C21.6289 14.329 21.8196 14.25 22.0186 14.25ZM9.96256 1.25H10.0186C10.2175 1.25 10.4082 1.32902 10.5489 1.46967C10.6895 1.61032 10.7686 1.80109 10.7686 2C10.7686 2.19891 10.6895 2.38968 10.5489 2.53033C10.4082 2.67098 10.2175 2.75 10.0186 2.75C8.11156 2.75 6.75756 2.752 5.72856 2.89C4.72356 3.025 4.14355 3.279 3.72055 3.702C3.23355 4.189 3.02055 4.567 2.90355 5.24C2.77155 5.999 2.76855 7.08 2.76855 9C2.76855 9.19891 2.68954 9.38968 2.54888 9.53033C2.40823 9.67098 2.21747 9.75 2.01855 9.75C1.81964 9.75 1.62888 9.67098 1.48822 9.53033C1.34757 9.38968 1.26855 9.19891 1.26855 9V8.904C1.26855 7.104 1.26855 5.886 1.42655 4.982C1.60155 3.977 1.97555 3.326 2.65955 2.642C3.40856 1.892 4.35756 1.561 5.52956 1.403C6.66956 1.25 8.12456 1.25 9.96256 1.25ZM12.0186 10.75C11.687 10.75 11.3691 10.8817 11.1347 11.1161C10.9003 11.3505 10.7686 11.6685 10.7686 12C10.7686 12.3315 10.9003 12.6495 11.1347 12.8839C11.3691 13.1183 11.687 13.25 12.0186 13.25C12.3501 13.25 12.668 13.1183 12.9024 12.8839C13.1369 12.6495 13.2686 12.3315 13.2686 12C13.2686 11.6685 13.1369 11.3505 12.9024 11.1161C12.668 10.8817 12.3501 10.75 12.0186 10.75Z"
          fill={color ?? "#095AD3"}
        />
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M5.9108 14.06C5.3158 13.37 5.0188 13.025 5.0188 12C5.0188 10.975 5.3158 10.63 5.9108 9.94C7.0988 8.562 9.0908 7 12.0188 7C14.9458 7 16.9388 8.562 18.1268 9.94C18.7218 10.63 19.0188 10.975 19.0188 12C19.0188 13.025 18.7218 13.37 18.1268 14.06C16.9388 15.438 14.9468 17 12.0188 17C9.0918 17 7.0988 15.438 5.9108 14.06ZM9.2688 12C9.2688 11.2707 9.55853 10.5712 10.0743 10.0555C10.59 9.53973 11.2895 9.25 12.0188 9.25C12.7481 9.25 13.4476 9.53973 13.9633 10.0555C14.4791 10.5712 14.7688 11.2707 14.7688 12C14.7688 12.7293 14.4791 13.4288 13.9633 13.9445C13.4476 14.4603 12.7481 14.75 12.0188 14.75C11.2895 14.75 10.59 14.4603 10.0743 13.9445C9.55853 13.4288 9.2688 12.7293 9.2688 12Z"
          fill={color ?? "#095AD3"}
        />
      </svg>
    );
  },
  search: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="28"
        height="28"
        viewBox="0 0 28 28"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M12.678 7.11426C11.6128 7.11435 10.5632 7.36914 9.61659 7.85738C8.66998 8.34561 7.85386 9.05314 7.23631 9.92092C6.61877 10.7887 6.21771 11.7916 6.06659 12.8459C5.91548 13.9002 6.01869 14.9753 6.36762 15.9816C6.71655 16.9879 7.30107 17.8962 8.07243 18.6306C8.84379 19.3651 9.7796 19.9044 10.8018 20.2037C11.824 20.5029 12.903 20.5534 13.9486 20.3509C14.9943 20.1484 15.9764 19.6987 16.813 19.0395L19.6828 21.9092C19.831 22.0523 20.0295 22.1315 20.2355 22.1297C20.4416 22.1279 20.6387 22.0453 20.7844 21.8996C20.9301 21.7539 21.0127 21.5568 21.0145 21.3508C21.0163 21.1448 20.9371 20.9463 20.7939 20.7981L17.9241 17.9283C18.7005 16.9434 19.1839 15.7599 19.319 14.5131C19.4541 13.2663 19.2355 12.0066 18.6881 10.8783C18.1407 9.74994 17.2867 8.79849 16.2238 8.13283C15.1609 7.46716 13.9321 7.11417 12.678 7.11426ZM7.5701 13.7935C7.5701 12.4389 8.10825 11.1397 9.06616 10.1818C10.0241 9.22397 11.3233 8.68584 12.678 8.68584C14.0326 8.68584 15.3318 9.22397 16.2897 10.1818C17.2477 11.1397 17.7858 12.4389 17.7858 13.7935C17.7858 15.1481 17.2477 16.4473 16.2897 17.4052C15.3318 18.363 14.0326 18.9012 12.678 18.9012C11.3233 18.9012 10.0241 18.363 9.06616 17.4052C8.10825 16.4473 7.5701 15.1481 7.5701 13.7935Z"
          fill={color ?? "#095AD3"}
        />
      </svg>
    );
  },
  chatai: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        width="18"
        height="18"
        viewBox="0 0 18 18"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        className={className}
      >
        <path
          d="M7.79625 4.2768C7.79707 4.38288 7.76484 4.48658 7.70402 4.57348C7.6432 4.66039 7.55683 4.72619 7.45691 4.76172L5.40662 5.50754L4.66135 7.55813C4.62462 7.65712 4.55848 7.7425 4.47182 7.80279C4.38516 7.86307 4.28213 7.89539 4.17657 7.89539C4.07101 7.89539 3.96798 7.86307 3.88133 7.80279C3.79467 7.7425 3.72853 7.65712 3.69179 7.55813L2.9462 5.50528L0.896237 4.76172C0.797277 4.72498 0.711928 4.65882 0.651658 4.57213C0.591387 4.48545 0.559082 4.38239 0.559082 4.2768C0.559082 4.17121 0.591387 4.06815 0.651658 3.98146C0.711928 3.89477 0.797277 3.82861 0.896237 3.79187L2.94847 3.04605L3.69179 0.995461C3.72853 0.89647 3.79467 0.811096 3.88133 0.750807C3.96798 0.690518 4.07101 0.658203 4.17657 0.658203C4.28213 0.658203 4.38516 0.690518 4.47182 0.750807C4.55848 0.811096 4.62462 0.89647 4.66135 0.995461L5.40694 3.04832L7.45691 3.79187C7.55683 3.82741 7.6432 3.8932 7.70402 3.98011C7.76484 4.06702 7.79707 4.17072 7.79625 4.2768Z"
          fill={color ?? "#095AD3"}
        />
        <path
          d="M13.2801 3.56531L11.927 4.91827L15.5613 8.55226L16.9143 7.1993C17.6132 6.50045 17.6132 5.36833 16.9143 4.66948L15.8129 3.56531C15.114 2.86647 13.9817 2.86647 13.2828 3.56531H13.2801ZM11.2952 5.55003L4.77866 12.0688C4.48792 12.3596 4.27546 12.7202 4.15804 13.1143L3.1684 16.4771C3.09851 16.7148 3.16281 16.9691 3.33614 17.1424C3.50946 17.3158 3.76386 17.38 3.99869 17.313L7.36179 16.3234C7.75597 16.206 8.1166 15.9935 8.40734 15.7028L14.9295 9.18401L11.2952 5.55003Z"
          fill={color ?? "#095AD3"}
        />
      </svg>
    );
  },
  commentplus: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="28"
        height="28"
        viewBox="0 0 28 28"
        fill="none"
        className={className}
      >
        <path
          fillRule="evenodd"
          d="M7.23977 8.99417C6.68701 9.54693 6.37646 10.2966 6.37646 11.0784V17.38C6.37646 18.1617 6.68701 18.9114 7.23977 19.4642C7.79254 20.0169 8.54225 20.3275 9.32398 20.3275H9.6289V22.6936C9.6289 23.4352 10.4656 23.8686 11.0709 23.4409L15.4821 20.3275H19.6911C20.4728 20.3275 21.2226 20.0169 21.7753 19.4642C22.3281 18.9114 22.6386 18.1617 22.6386 17.38V11.0784C22.6386 10.2966 22.3281 9.54693 21.7753 8.99417C21.2226 8.4414 20.4728 8.13086 19.6911 8.13086H9.32398C8.54225 8.13086 7.79254 8.4414 7.23977 8.99417ZM15.2045 14.8019H17.6729C17.8038 14.8019 17.9294 14.7462 18.0219 14.647C18.1145 14.5478 18.1665 14.4133 18.1665 14.273C18.1665 14.1327 18.1145 13.9982 18.0219 13.899C17.9294 13.7998 17.8038 13.744 17.6729 13.744H15.2045V11.0994C15.2045 10.9591 15.1525 10.8245 15.0599 10.7253C14.9673 10.6262 14.8418 10.5704 14.7108 10.5704C14.5799 10.5704 14.4543 10.6262 14.3617 10.7253C14.2692 10.8245 14.2172 10.9591 14.2172 11.0994V13.744H11.7488C11.6179 13.744 11.4923 13.7998 11.3997 13.899C11.3071 13.9982 11.2551 14.1327 11.2551 14.273C11.2551 14.4133 11.3071 14.5478 11.3997 14.647C11.4923 14.7462 11.6179 14.8019 11.7488 14.8019H14.2172V17.4466C14.2172 17.5869 14.2692 17.7214 14.3617 17.8206C14.4543 17.9198 14.5799 17.9755 14.7108 17.9755C14.8418 17.9755 14.9673 17.9198 15.0599 17.8206C15.1525 17.7214 15.2045 17.5869 15.2045 17.4466V14.8019Z"
          fill={color ?? "#095AD3"}
        />
      </svg>
    );
  },
  previous: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="14"
        height="15"
        viewBox="0 0 14 15"
        fill="none"
        className={className}
      >
        <path
          d="M4.62517 8.92709L0.961426 5.26335L4.62517 1.59961"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.36726"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M0.961426 5.26758H8.65528C9.18452 5.26758 9.70858 5.37182 10.1975 5.57435C10.6865 5.77688 11.1308 6.07374 11.505 6.44797C11.8792 6.8222 12.1761 7.26648 12.3786 7.75543C12.5812 8.24439 12.6854 8.76845 12.6854 9.29769C12.6854 9.82693 12.5812 10.351 12.3786 10.84C12.1761 11.3289 11.8792 11.7732 11.505 12.1474C11.1308 12.5216 10.6865 12.8185 10.1975 13.021C9.70858 13.2236 9.18452 13.3278 8.65528 13.3278H6.09066"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.36726"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  next: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="14"
        height="15"
        viewBox="0 0 14 15"
        fill="none"
        className={className}
      >
        <path
          d="M9.37483 8.92709L13.0386 5.26335L9.37483 1.59961"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.36726"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M13.0386 5.26758H5.34472C4.81548 5.26758 4.29142 5.37182 3.80246 5.57435C3.31351 5.77688 2.86923 6.07374 2.495 6.44797C2.12077 6.8222 1.82391 7.26648 1.62138 7.75543C1.41885 8.24439 1.31461 8.76845 1.31461 9.29769C1.31461 9.82693 1.41885 10.351 1.62138 10.84C1.82391 11.3289 2.12077 11.7732 2.495 12.1474C2.86923 12.5216 3.31351 12.8185 3.80246 13.021C4.29142 13.2236 4.81548 13.3278 5.34472 13.3278H7.90934"
          stroke={color ?? "#095AD3"}
          strokeWidth="1.36726"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  bold: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="28"
        height="28"
        viewBox="0 0 28 28"
        fill="none"
        className={className}
      >
        <path
          d="M9.74533 7H14.2441C14.8865 7.00022 15.5164 7.192 16.0649 7.55435C16.6134 7.91669 17.0593 8.43562 17.3537 9.05429C17.6482 9.67296 17.7798 10.3675 17.7342 11.0618C17.6887 11.7562 17.4676 12.4236 17.0953 12.9908C17.7411 13.4261 18.2383 14.0777 18.5117 14.8467C18.7851 15.6157 18.8198 16.4603 18.6105 17.2526C18.4013 18.0448 17.9594 18.7416 17.3519 19.2374C16.7444 19.7332 16.0043 20.0009 15.2438 20H9.74533C9.48019 20 9.2259 19.8859 9.03842 19.6827C8.85093 19.4795 8.74561 19.204 8.74561 18.9167V8.08333C8.74561 7.79602 8.85093 7.52047 9.03842 7.3173C9.2259 7.11414 9.48019 7 9.74533 7ZM10.7451 14.5833V17.8333H15.2438C15.6416 17.8333 16.023 17.6621 16.3042 17.3574C16.5854 17.0526 16.7434 16.6393 16.7434 16.2083C16.7434 15.7774 16.5854 15.364 16.3042 15.0593C16.023 14.7545 15.6416 14.5833 15.2438 14.5833H10.7451ZM14.2441 12.4167C14.6418 12.4167 15.0233 12.2455 15.3045 11.9407C15.5857 11.636 15.7437 11.2226 15.7437 10.7917C15.7437 10.3607 15.5857 9.94736 15.3045 9.64262C15.0233 9.33787 14.6418 9.16667 14.2441 9.16667H10.7451V12.4167H14.2441Z"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },
  italic: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="28"
        height="28"
        viewBox="0 0 28 28"
        fill="none"
        className={className}
      >
        <path
          d="M18.853 7H12.853C12.5878 7 12.3335 7.11414 12.1459 7.3173C11.9584 7.52047 11.853 7.79602 11.853 8.08333C11.853 8.37065 11.9584 8.6462 12.1459 8.84937C12.3335 9.05253 12.5878 9.16667 12.853 9.16667H14.373L11.173 17.8333H8.85303C8.58781 17.8333 8.33346 17.9475 8.14592 18.1506C7.95838 18.3538 7.85303 18.6293 7.85303 18.9167C7.85303 19.204 7.95838 19.4795 8.14592 19.6827C8.33346 19.8859 8.58781 20 8.85303 20H14.853C15.1182 20 15.3726 19.8859 15.5601 19.6827C15.7477 19.4795 15.853 19.204 15.853 18.9167C15.853 18.6293 15.7477 18.3538 15.5601 18.1506C15.3726 17.9475 15.1182 17.8333 14.853 17.8333H13.333L16.533 9.16667H18.853C19.1182 9.16667 19.3726 9.05253 19.5601 8.84937C19.7477 8.6462 19.853 8.37065 19.853 8.08333C19.853 7.79602 19.7477 7.52047 19.5601 7.3173C19.3726 7.11414 19.1182 7 18.853 7Z"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },
  underline: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="28"
        height="28"
        viewBox="0 0 28 28"
        fill="none"
        className={className}
      >
        <path
          d="M9.45989 7V11.6429C9.45989 12.8742 9.91142 14.0551 10.7151 14.9259C11.5189 15.7966 12.609 16.2857 13.7456 16.2857C14.8822 16.2857 15.9723 15.7966 16.7761 14.9259C17.5798 14.0551 18.0313 12.8742 18.0313 11.6429V7M7.74561 20H19.7456"
          stroke={color ?? "#383D44"}
          strokeWidth="1.85714"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  color: ({ className, fill, customColor }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="19"
        height="22"
        viewBox="0 0 19 22"
        fill="none"
        className={className}
      >
        <path
          d="M10.6533 0.682477C10.5922 0.481743 10.4728 0.307243 10.3126 0.184513C10.1524 0.0617833 9.95981 -0.00273368 9.76296 0.000403446H9.71844C9.51944 -0.00569331 9.32395 0.0574481 9.16118 0.18039C8.99841 0.303331 8.87711 0.479469 8.81541 0.682477L3.62614 12.7688C3.5684 12.894 3.53795 13.0316 3.53711 13.1712C3.53711 13.3521 3.60411 13.5256 3.72337 13.6535C3.84263 13.7815 4.00439 13.8533 4.17305 13.8533C4.32499 13.8567 4.4739 13.8075 4.59764 13.7128C4.72138 13.6182 4.81335 13.4833 4.85986 13.3281L6.18262 10.1565H13.178L14.5007 13.2872C14.5528 13.4473 14.6486 13.5868 14.7756 13.6878C14.9026 13.7887 15.055 13.8464 15.213 13.8533C15.3032 13.8533 15.3925 13.8343 15.4758 13.7972C15.5591 13.7602 15.6348 13.706 15.6986 13.6376C15.7624 13.5692 15.813 13.488 15.8475 13.3986C15.882 13.3092 15.8998 13.2134 15.8998 13.1167C15.8927 12.9823 15.8625 12.8505 15.8107 12.7279L10.6533 0.682477ZM6.76768 8.77869L9.71844 1.8079L12.6438 8.77869H6.76768Z"
          fill={color ?? "#383D44"}
        />
        <path
          d="M17.3875 16.4209H2.12491C1.42247 16.4209 0.853027 17.0316 0.853027 17.785V20.5133C0.853027 21.2667 1.42247 21.8775 2.12491 21.8775H17.3875C18.0899 21.8775 18.6593 21.2667 18.6593 20.5133V17.785C18.6593 17.0316 18.0899 16.4209 17.3875 16.4209Z"
          fill={customColor ?? "#383D44"}
        />
      </svg>
    );
  },
  highlight: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="16"
        height="16"
        viewBox="5 2 16 16"
        fill="none"
        className={className}
      >
        <path
          d="M6.56641 13.0588L8.47083 11.1544L8.45005 11.1405C8.04839 10.732 8.04839 10.0741 8.45005 9.67241L11.7326 6.38988L14.6689 9.32615L11.3863 12.6087C10.9916 13.0103 10.3476 13.0103 9.93897 12.6225L9.50268 13.0588H6.56641ZM14.8143 3.30125C15.2229 2.89958 15.8808 2.89958 16.2824 3.30125L17.7575 4.76938C18.1592 5.17797 18.1592 5.83586 17.7575 6.24445L15.4722 8.52283L12.5359 5.58655L14.8143 3.30125Z"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },
  bullets: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="22"
        height="16"
        viewBox="0 0 22 16"
        fill="none"
        className={className}
      >
        <path
          d="M8.71387 1.98145L20.6674 1.98145"
          stroke={color ?? "#383D44"}
          strokeWidth="1.63649"
          strokeLinecap="round"
        />
        <path
          d="M8.71387 7.92188L20.6674 7.92188"
          stroke={color ?? "#383D44"}
          strokeWidth="1.63649"
          strokeLinecap="round"
        />
        <path
          d="M8.71387 13.8652L20.6674 13.8652"
          stroke={color ?? "#383D44"}
          strokeWidth="1.63649"
          strokeLinecap="round"
        />
        <ellipse
          cx="2.73785"
          cy="1.98057"
          rx="1.99225"
          ry="1.98057"
          fill={color ?? "#383D44"}
        />
        <ellipse
          cx="2.73785"
          cy="7.92198"
          rx="1.99225"
          ry="1.98057"
          fill={color ?? "#383D44"}
        />
        <ellipse
          cx="2.73785"
          cy="13.8644"
          rx="1.99225"
          ry="1.98057"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },
  ordered: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="19"
        height="17"
        viewBox="0 0 19 17"
        fill="none"
        className={className}
      >
        <path
          d="M4.93311 2.86816L17.6064 2.86817"
          stroke={color ?? "#383D44"}
          strokeWidth="1.73504"
          strokeLinecap="round"
        />
        <path
          d="M4.93311 9.16602L17.6064 9.16602"
          stroke={color ?? "#383D44"}
          strokeWidth="1.73504"
          strokeLinecap="round"
        />
        <path
          d="M4.93311 15.4678L17.6064 15.4678"
          stroke={color ?? "#383D44"}
          strokeWidth="1.73504"
          strokeLinecap="round"
        />
        <path
          d="M2.31285 0.540039V3.94897H1.59211V1.22416H1.57214L0.791478 1.71352V1.07435L1.63539 0.540039H2.31285Z"
          fill={color ?? "#383D44"}
        />
        <path
          d="M0.170613 10.3103V9.79095L1.38405 8.6674C1.48725 8.56753 1.5738 8.47765 1.64371 8.39775C1.71473 8.31785 1.76855 8.23962 1.80517 8.16305C1.84179 8.08537 1.8601 8.00159 1.8601 7.91171C1.8601 7.81184 1.83735 7.72584 1.79185 7.65371C1.74636 7.58047 1.68421 7.52443 1.60543 7.48559C1.52664 7.44564 1.43731 7.42567 1.33744 7.42567C1.23313 7.42567 1.14214 7.44675 1.06446 7.48892C0.986781 7.53109 0.926859 7.59157 0.884691 7.67035C0.842523 7.74914 0.821439 7.84291 0.821439 7.95166H0.137323C0.137323 7.72861 0.187813 7.53497 0.288794 7.37074C0.389774 7.20651 0.531258 7.07945 0.713246 6.98957C0.895233 6.89968 1.10496 6.85474 1.34243 6.85474C1.58656 6.85474 1.79907 6.89802 1.97994 6.98457C2.16193 7.07002 2.30341 7.18875 2.40439 7.34078C2.50538 7.49281 2.55587 7.66703 2.55587 7.86344C2.55587 7.99216 2.53034 8.11922 2.4793 8.24461C2.42936 8.37001 2.34003 8.50927 2.21131 8.66241C2.08259 8.81443 1.90116 8.99697 1.66701 9.21003L1.16932 9.69774V9.72104H2.60081V10.3103H0.170613Z"
          fill={color ?? "#383D44"}
        />
        <path
          d="M1.29333 16.7182C1.04476 16.7182 0.823381 16.6755 0.629187 16.59C0.436103 16.5035 0.283523 16.3847 0.171445 16.2338C0.0604774 16.0818 0.00332903 15.9065 0 15.7078H0.725729C0.730168 15.7911 0.757355 15.8643 0.807291 15.9275C0.858336 15.9897 0.926026 16.038 1.01036 16.0724C1.0947 16.1068 1.18957 16.124 1.29499 16.124C1.40485 16.124 1.50195 16.1045 1.58628 16.0657C1.67062 16.0269 1.73665 15.973 1.78436 15.9042C1.83208 15.8354 1.85594 15.7561 1.85594 15.6662C1.85594 15.5752 1.83041 15.4948 1.77937 15.4249C1.72943 15.3538 1.6573 15.2984 1.56298 15.2584C1.46977 15.2185 1.3588 15.1985 1.23008 15.1985H0.912155V14.6692H1.23008C1.33883 14.6692 1.43481 14.6503 1.51804 14.6126C1.60238 14.5749 1.66785 14.5227 1.71445 14.4561C1.76106 14.3884 1.78436 14.3096 1.78436 14.2198C1.78436 14.1343 1.76383 14.0594 1.72278 13.995C1.68283 13.9296 1.62623 13.8785 1.55299 13.8419C1.48087 13.8053 1.39653 13.787 1.29999 13.787C1.20234 13.787 1.11301 13.8047 1.032 13.8402C0.950994 13.8746 0.886078 13.924 0.837252 13.9884C0.788426 14.0527 0.762349 14.1282 0.75902 14.2148H0.0682452C0.0715742 14.0183 0.127613 13.8452 0.236361 13.6954C0.34511 13.5456 0.491587 13.4286 0.675794 13.3442C0.86111 13.2588 1.07028 13.216 1.30332 13.216C1.53857 13.216 1.74441 13.2588 1.92085 13.3442C2.09729 13.4297 2.23434 13.5451 2.33199 13.6904C2.43075 13.8347 2.47958 13.9967 2.47847 14.1765C2.47958 14.3673 2.42021 14.5266 2.30036 14.6542C2.18163 14.7818 2.02683 14.8628 1.83596 14.8972V14.9238C2.08675 14.956 2.27761 15.0431 2.40856 15.1852C2.54061 15.3261 2.60608 15.5025 2.60497 15.7145C2.60608 15.9087 2.55004 16.0812 2.43685 16.2322C2.32478 16.3831 2.16998 16.5018 1.97245 16.5884C1.77493 16.6749 1.54856 16.7182 1.29333 16.7182Z"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },
  footnotes: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="28"
        height="28"
        viewBox="0 0 28 28"
        fill="none"
        className={className}
      >
        <path
          d="M20.8918 9.97894C20.7156 10.1402 20.5271 10.2877 20.3282 10.42C20.1745 10.52 19.9876 10.5554 19.808 10.5184C19.6284 10.4815 19.4707 10.3752 19.369 10.2226C19.2672 10.0701 19.2298 9.88353 19.2648 9.70354C19.2998 9.52355 19.4043 9.36462 19.5557 9.26124C20.2651 8.78773 20.7906 8.03475 20.9076 7.49717C20.944 7.32912 21.0413 7.18048 21.1807 7.07988C21.3201 6.97927 21.4919 6.93382 21.6628 6.95226C21.8338 6.97071 21.9919 7.05175 22.1066 7.17978C22.2214 7.30781 22.2848 7.47378 22.2845 7.64572V13.6807C22.2845 13.8654 22.2111 14.0425 22.0805 14.1731C21.9499 14.3037 21.7728 14.377 21.5881 14.377C21.4035 14.377 21.2263 14.3037 21.0957 14.1731C20.9652 14.0425 20.8918 13.8654 20.8918 13.6807V9.97894ZM13.206 19.7212C13.0677 19.5656 12.9939 19.363 12.9999 19.1549V10.5796C12.9999 10.3512 13.0686 10.1451 13.2199 9.98079L13.2227 9.97708C13.2977 9.89844 13.3884 9.83634 13.4888 9.79477C13.5892 9.7532 13.6972 9.73307 13.8058 9.73568C14.0314 9.73568 14.2301 9.8146 14.3833 9.97894C14.459 10.0591 14.518 10.1535 14.5571 10.2566C14.5961 10.3597 14.6144 10.4695 14.6108 10.5796V13.2165C14.7798 13.0394 14.9732 12.8872 15.1911 12.7597L15.192 12.7587C15.6225 12.5124 16.111 12.3855 16.607 12.3911C17.5391 12.3911 18.3051 12.7439 18.8817 13.4449C19.4573 14.1431 19.7321 15.0595 19.7321 16.1699C19.7321 17.284 19.4564 18.2032 18.8817 18.9005C18.3032 19.5987 17.5308 19.9478 16.5875 19.9478C16.0847 19.9557 15.5891 19.8287 15.1521 19.5801C14.9334 19.4507 14.7335 19.292 14.5579 19.1085V19.1549C14.5602 19.2596 14.5414 19.3637 14.5027 19.461C14.4639 19.5583 14.4059 19.6468 14.3322 19.7212C14.2579 19.7951 14.1694 19.8533 14.0721 19.8922C13.9748 19.9311 13.8707 19.95 13.7659 19.9478C13.6626 19.9514 13.5598 19.9335 13.4638 19.8951C13.3679 19.8567 13.2811 19.7988 13.2088 19.725L13.206 19.7212ZM17.6162 17.8866C17.9272 17.4827 18.0953 16.9182 18.0953 16.169C18.0953 15.4253 17.9272 14.8635 17.6162 14.4587C17.3107 14.0623 16.9013 13.8645 16.3628 13.8645C15.8521 13.8645 15.439 14.0651 15.1075 14.482C14.7788 14.896 14.6043 15.4522 14.6043 16.1699C14.6043 16.8922 14.7788 17.4493 15.1075 17.8643C15.438 18.2756 15.8503 18.4752 16.3628 18.4752C16.9022 18.4752 17.3117 18.2784 17.6162 17.8866ZM3.71533 19.192C3.71533 19.4102 3.80168 19.5987 3.96602 19.7435L3.97251 19.75C4.13964 19.8865 4.34297 19.9478 4.56673 19.9478C4.75006 19.9514 4.9295 19.8946 5.07738 19.7862C5.22222 19.6767 5.32342 19.5198 5.38934 19.3369L6.20638 17.1178H9.80601L10.6286 19.3369V19.3387C10.6955 19.5207 10.7957 19.6767 10.9406 19.7862C11.0882 19.8976 11.2637 19.9478 11.4512 19.9478C11.6662 19.9542 11.8763 19.8826 12.0427 19.7463C12.1248 19.6794 12.1909 19.5948 12.2359 19.4988C12.2809 19.4029 12.3037 19.298 12.3026 19.192C12.297 19.0497 12.2662 18.9095 12.2116 18.7779L9.01682 10.4534C8.94312 10.243 8.80991 10.0585 8.63337 9.9223C8.45529 9.79623 8.24152 9.7305 8.02337 9.73475C7.78754 9.73475 7.57214 9.79325 7.39017 9.9223C7.20793 10.0585 7.07053 10.246 6.99557 10.4608L3.80632 18.7789C3.75061 18.9228 3.71533 19.0639 3.71533 19.192ZM8.00945 12.133L9.28607 15.6397H6.73282L8.00945 12.133Z"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },

  image: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="19"
        viewBox="0 0 20 19"
        fill="none"
        className={className}
      >
        <path
          d="M18.8924 7.60134C12.57 6.74379 7.11812 11.3791 7.48446 17.5275M5.09326 5.7219C5.09326 6.22286 5.2948 6.70331 5.65355 7.05754C6.0123 7.41178 6.49887 7.61079 7.00622 7.61079C7.51356 7.61079 8.00013 7.41178 8.35888 7.05754C8.71763 6.70331 8.91917 6.22286 8.91917 5.7219C8.91917 5.22093 8.71763 4.74049 8.35888 4.38625C8.00013 4.03202 7.51356 3.83301 7.00622 3.83301C6.49887 3.83301 6.0123 4.03202 5.65355 4.38625C5.2948 4.74049 5.09326 5.22093 5.09326 5.7219Z"
          stroke={color ?? "#383D44"}
          strokeWidth="1.52251"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M1.74561 10.5064C4.40461 10.1428 6.79102 11.4111 8.08131 13.4341"
          stroke={color ?? "#383D44"}
          strokeWidth="1.52251"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
        <path
          d="M1.74561 7.04444C1.74561 4.92889 1.74561 3.87111 2.16263 3.06267C2.52943 2.35186 3.11469 1.77396 3.83455 1.41178C4.6533 1 5.72455 1 7.86706 1H12.8407C14.9833 1 16.0545 1 16.8733 1.41178C17.5931 1.77396 18.1784 2.35186 18.5452 3.06267C18.9622 3.87111 18.9622 4.92889 18.9622 7.04444V11.9556C18.9622 14.0711 18.9622 15.1289 18.5452 15.9373C18.1784 16.6481 17.5931 17.226 16.8733 17.5882C16.0545 18 14.9833 18 12.8407 18H7.86706C5.72455 18 4.6533 18 3.83455 17.5882C3.11469 17.226 2.52943 16.6481 2.16263 15.9373C1.74561 15.1289 1.74561 14.0711 1.74561 11.9556V7.04444Z"
          stroke={color ?? "#383D44"}
          strokeWidth="1.52251"
          strokeLinecap="round"
          strokeLinejoin="round"
        />
      </svg>
    );
  },
  uploadplus: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="18"
        height="18"
        viewBox="0 0 18 18"
        fill="none"
        className={className}
      >
        <path
          d="M16.1618 10.2789H10.1935V16.6736C10.1935 17.0128 10.0677 17.3381 9.84384 17.5779C9.61998 17.8178 9.31636 17.9525 8.99978 17.9525C8.6832 17.9525 8.37958 17.8178 8.15573 17.5779C7.93187 17.3381 7.8061 17.0128 7.8061 16.6736V10.2789H1.83772C1.52114 10.2789 1.21752 10.1441 0.993663 9.90429C0.769805 9.66444 0.644043 9.33914 0.644043 8.99994C0.644043 8.66075 0.769805 8.33544 0.993663 8.0956C1.21752 7.85575 1.52114 7.721 1.83772 7.721H7.8061V1.3263C7.8061 0.987107 7.93187 0.661803 8.15573 0.421956C8.37958 0.182108 8.6832 0.0473633 8.99978 0.0473633C9.31636 0.0473633 9.61998 0.182108 9.84384 0.421956C10.0677 0.661803 10.1935 0.987107 10.1935 1.3263V7.721H16.1618C16.4784 7.721 16.782 7.85575 17.0059 8.0956C17.2298 8.33544 17.3555 8.66075 17.3555 8.99994C17.3555 9.33914 17.2298 9.66444 17.0059 9.90429C16.782 10.1441 16.4784 10.2789 16.1618 10.2789Z"
          fill="white"
        />
      </svg>
    );
  },
  dialogclose: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        className={className}
      >
        <path
          d="M20 20L4 4M20 4L4 20"
          stroke={color ?? "#A3A7AF"}
          strokeWidth="2"
          strokeLinecap="round"
        />
      </svg>
    );
  },
  trash: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="18"
        height="20"
        viewBox="0 0 18 20"
        fill="none"
        className={className}
      >
        <path
          d="M11.3264 3.41667H7.40083C7.40083 2.89176 7.60762 2.38835 7.97572 2.01718C8.34382 1.64602 8.84307 1.4375 9.36364 1.4375C9.88421 1.4375 10.3835 1.64602 10.7516 2.01718C11.1197 2.38835 11.3264 2.89176 11.3264 3.41667ZM12.5041 3.41667C12.5041 2.57681 12.1733 1.77136 11.5843 1.1775C10.9953 0.58363 10.1965 0.25 9.36364 0.25C8.53072 0.25 7.73193 0.58363 7.14297 1.1775C6.55401 1.77136 6.22314 2.57681 6.22314 3.41667H1.31611C1.15994 3.41667 1.01017 3.47922 0.89974 3.59057C0.78931 3.70192 0.727272 3.85294 0.727272 4.01042C0.727272 4.16789 0.78931 4.31891 0.89974 4.43026C1.01017 4.54161 1.15994 4.60417 1.31611 4.60417H2.34463L3.30012 16.1649C3.36964 17.0059 3.75005 17.7898 4.36593 18.3613C4.98181 18.9327 5.78817 19.2499 6.62512 19.25H12.1021C12.9391 19.2499 13.7455 18.9327 14.3613 18.3613C14.9772 17.7898 15.3576 17.0059 15.4271 16.1649L16.3826 4.60417H17.4112C17.5673 4.60417 17.7171 4.54161 17.8275 4.43026C17.938 4.31891 18 4.16789 18 4.01042C18 3.85294 17.938 3.70192 17.8275 3.59057C17.7171 3.47922 17.5673 3.41667 17.4112 3.41667H12.5041ZM14.2534 16.0659C14.2085 16.6101 13.9624 17.1174 13.5639 17.4873C13.1655 17.8571 12.6437 18.0624 12.1021 18.0625H6.62512C6.08356 18.0624 5.56181 17.8571 5.16334 17.4873C4.76487 17.1174 4.51878 16.6101 4.47388 16.0659L3.52545 4.60417H15.201L14.2534 16.0659ZM11.1302 7.375C10.974 7.375 10.8242 7.43756 10.7138 7.54891C10.6034 7.66026 10.5413 7.81128 10.5413 7.96875V14.6979C10.5413 14.8554 10.6034 15.0064 10.7138 15.1178C10.8242 15.2291 10.974 15.2917 11.1302 15.2917C11.2863 15.2917 11.4361 15.2291 11.5465 15.1178C11.657 15.0064 11.719 14.8554 11.719 14.6979V7.96875C11.719 7.81128 11.657 7.66026 11.5465 7.54891C11.4361 7.43756 11.2863 7.375 11.1302 7.375ZM7.00826 7.96875C7.00826 7.81128 7.0703 7.66026 7.18073 7.54891C7.29116 7.43756 7.44094 7.375 7.59711 7.375C7.75328 7.375 7.90305 7.43756 8.01348 7.54891C8.12391 7.66026 8.18595 7.81128 8.18595 7.96875V14.6979C8.18595 14.8554 8.12391 15.0064 8.01348 15.1178C7.90305 15.2291 7.75328 15.2917 7.59711 15.2917C7.44094 15.2917 7.29116 15.2291 7.18073 15.1178C7.0703 15.0064 7.00826 14.8554 7.00826 14.6979V7.96875Z"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },
  dropdownicon: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="10"
        height="5"
        viewBox="0 0 10 5"
        fill="none"
        className={className}
      >
        <path
          d="M5 4.77441L0.669874 0.274414L9.33013 0.274413L5 4.77441Z"
          fill={color ?? "#383D44"}
        />
      </svg>
    );
  },
  draghandle: ({ className, fill }) => {
    const color = typeof fill === "string" ? fill : fill.from;
    return (
      <>
        <svg
          width="81"
          height="89"
          viewBox="0 0 81 89"
          fill="none"
          className={className}
          xmlns="http://www.w3.org/2000/svg"
          // xmlns:xlink="http://www.w3.org/1999/xlink"
        >
          <mask id="path-1-inside-1_4289_174290" fill="white">
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M37.6242 1.43864C36.6916 0.516915 35.4332 0 34.1219 0H4.98235C2.23068 0 0 2.23067 0 4.98235V68.9225C0 71.6742 2.23068 73.9049 4.98235 73.9049H51.0691C53.8208 73.9049 56.0515 71.6742 56.0515 68.9225V21.7314C56.0515 20.3999 55.5185 19.1237 54.5714 18.1877L37.6242 1.43864Z"
            />
          </mask>
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M37.6242 1.43864C36.6916 0.516915 35.4332 0 34.1219 0H4.98235C2.23068 0 0 2.23067 0 4.98235V68.9225C0 71.6742 2.23068 73.9049 4.98235 73.9049H51.0691C53.8208 73.9049 56.0515 71.6742 56.0515 68.9225V21.7314C56.0515 20.3999 55.5185 19.1237 54.5714 18.1877L37.6242 1.43864Z"
            fill="url(#pattern0_4289_174290)"
          />
          <path
            d="M37.6242 1.43864L37.0618 2.00764L37.6242 1.43864ZM4.98235 0.8H34.1219V-0.8H4.98235V0.8ZM0.8 4.98235C0.8 2.6725 2.6725 0.8 4.98235 0.8V-0.8C1.78885 -0.8 -0.8 1.78885 -0.8 4.98235H0.8ZM0.8 68.9225V4.98235H-0.8V68.9225H0.8ZM4.98235 73.1049C2.6725 73.1049 0.8 71.2324 0.8 68.9225H-0.8C-0.8 72.1161 1.78885 74.7049 4.98235 74.7049V73.1049ZM51.0691 73.1049H4.98235V74.7049H51.0691V73.1049ZM55.2515 68.9225C55.2515 71.2324 53.379 73.1049 51.0691 73.1049V74.7049C54.2626 74.7049 56.8515 72.1161 56.8515 68.9225H55.2515ZM55.2515 21.7314V68.9225H56.8515V21.7314H55.2515ZM55.1337 17.6187L38.1865 0.869641L37.0618 2.00764L54.009 18.7567L55.1337 17.6187ZM56.8515 21.7314C56.8515 20.1861 56.2329 18.705 55.1337 17.6187L54.009 18.7567C54.8041 19.5424 55.2515 20.6137 55.2515 21.7314H56.8515ZM34.1219 0.8C35.2226 0.8 36.279 1.23392 37.0618 2.00764L38.1865 0.869641C37.1042 -0.200086 35.6437 -0.8 34.1219 -0.8V0.8Z"
            fill="#A3A7AF"
            mask="url(#path-1-inside-1_4289_174290)"
          />
          <ellipse
            cx="69.9081"
            cy="57.3236"
            rx="10.4706"
            ry="9.86318"
            fill="#10C900"
          />
          <path
            d="M74.8928 58.1066H70.7378V62.0205C70.7378 62.2281 70.6503 62.4272 70.4944 62.574C70.3386 62.7209 70.1272 62.8033 69.9068 62.8033C69.6864 62.8033 69.4751 62.7209 69.3192 62.574C69.1634 62.4272 69.0758 62.2281 69.0758 62.0205V58.1066H64.9208C64.7004 58.1066 64.4891 58.0241 64.3332 57.8773C64.1774 57.7305 64.0898 57.5314 64.0898 57.3238C64.0898 57.1162 64.1774 56.9171 64.3332 56.7703C64.4891 56.6235 64.7004 56.541 64.9208 56.541H69.0758V52.627C69.0758 52.4194 69.1634 52.2203 69.3192 52.0735C69.4751 51.9267 69.6864 51.8442 69.9068 51.8442C70.1272 51.8442 70.3386 51.9267 70.4944 52.0735C70.6503 52.2203 70.7378 52.4194 70.7378 52.627V56.541H74.8928C75.1132 56.541 75.3246 56.6235 75.4804 56.7703C75.6363 56.9171 75.7238 57.1162 75.7238 57.3238C75.7238 57.5314 75.6363 57.7305 75.4804 57.8773C75.3246 58.0241 75.1132 58.1066 74.8928 58.1066Z"
            fill="white"
          />
          <path
            d="M49.7371 70.1311V67.4044C49.7371 66.8258 49.5073 66.271 49.0982 65.8619C48.6891 65.4528 48.1343 65.223 47.5557 65.223C46.9772 65.223 46.4224 65.4528 46.0133 65.8619C45.6042 66.271 45.3744 66.8258 45.3744 67.4044V68.9313M45.3744 68.4951V66.3137C45.3744 65.7352 45.1445 65.1803 44.7355 64.7712C44.3264 64.3621 43.7715 64.1323 43.193 64.1323C42.6145 64.1323 42.0596 64.3621 41.6505 64.7712C41.2414 65.1803 41.0116 65.7352 41.0116 66.3137V68.4951M41.0116 68.386V67.4044C41.0116 66.8258 40.7818 66.271 40.3727 65.8619C39.9636 65.4528 39.4088 65.223 38.8302 65.223C38.2517 65.223 37.6969 65.4528 37.2878 65.8619C36.8787 66.271 36.6489 66.8258 36.6489 67.4044V72.8578M36.6489 72.8578C36.6489 72.2793 36.4191 71.7244 36.01 71.3154C35.6009 70.9063 35.046 70.6764 34.4675 70.6764C33.889 70.6764 33.3341 70.9063 32.925 71.3154C32.516 71.7244 32.2861 72.2793 32.2861 72.8578"
            fill="white"
          />
          <path
            d="M49.7371 70.1311V67.4044C49.7371 66.8258 49.5073 66.271 49.0982 65.8619C48.6891 65.4528 48.1343 65.223 47.5557 65.223C46.9772 65.223 46.4224 65.4528 46.0133 65.8619C45.6042 66.271 45.3744 66.8258 45.3744 67.4044V68.9313M45.3744 68.4951V66.3137C45.3744 65.7352 45.1445 65.1803 44.7355 64.7712C44.3264 64.3621 43.7715 64.1323 43.193 64.1323C42.6145 64.1323 42.0596 64.3621 41.6505 64.7712C41.2414 65.1803 41.0116 65.7352 41.0116 66.3137V68.4951M41.0116 68.386V67.4044C41.0116 66.8258 40.7818 66.271 40.3727 65.8619C39.9636 65.4528 39.4088 65.223 38.8303 65.223C38.2517 65.223 37.6969 65.4528 37.2878 65.8619C36.8787 66.271 36.6489 66.8258 36.6489 67.4044V72.8578C36.6489 72.2793 36.4191 71.7244 36.01 71.3154C35.6009 70.9063 35.046 70.6764 34.4675 70.6764C33.889 70.6764 33.3341 70.9063 32.925 71.3154C32.516 71.7244 32.2861 72.2793 32.2861 72.8578"
            stroke="black"
            strokeWidth="2.18137"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
          <path
            d="M49.7371 69.5857C49.7371 69.0071 49.9669 68.4523 50.376 68.0432C50.7851 67.6341 51.3399 67.4043 51.9185 67.4043C52.497 67.4043 53.0519 67.6341 53.4609 68.0432C53.87 68.4523 54.0999 69.0071 54.0999 69.5857V72.8577C54.0999 75.1719 53.1806 77.3912 51.5442 79.0276C49.9079 80.6639 47.6885 81.5832 45.3744 81.5832H41.0116C38.6975 81.5832 36.4781 80.6639 34.8418 79.0276C33.2054 77.3912 32.2861 75.1719 32.2861 72.8577C32.2861 72.2792 32.516 71.7244 32.925 71.3153C33.3341 70.9062 33.889 70.6764 34.4675 70.6764C35.046 70.6764 35.6009 70.9062 36.01 71.3153C36.4191 71.7244 36.6489 72.2792 36.6489 72.8577"
            fill="white"
          />
          <path
            d="M49.7371 69.5857C49.7371 69.0071 49.9669 68.4523 50.376 68.0432C50.7851 67.6341 51.3399 67.4043 51.9185 67.4043C52.497 67.4043 53.0519 67.6341 53.4609 68.0432C53.87 68.4523 54.0999 69.0071 54.0999 69.5857V72.8577C54.0999 75.1719 53.1806 77.3912 51.5442 79.0276C49.9079 80.6639 47.6885 81.5832 45.3744 81.5832H41.0116C38.6975 81.5832 36.4781 80.6639 34.8418 79.0276C33.2054 77.3912 32.2861 75.1719 32.2861 72.8577C32.2861 72.2792 32.516 71.7244 32.925 71.3153C33.3341 70.9062 33.889 70.6764 34.4675 70.6764C35.046 70.6764 35.6009 70.9062 36.01 71.3153C36.4191 71.7244 36.6489 72.2792 36.6489 72.8577"
            stroke="black"
            strokeWidth="2.18137"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      </>
    );
  },
} satisfies Record<string, FC<SvgIconProps>>;

export const Icon = forwardRef<HTMLDivElement, IconProps>(
  (
    {
      iconName,
      className,
      iconClassName,
      customColor,
      width,
      height,
      fill,
      onClick,
      ...props
    },
    ref
  ) => (
    <span
      className={cn(
        `flex flex-row items-center justify-center`,
        onClick && "cursor-pointer",
        className
      )}
      onClick={onClick}
      {...props}
      ref={ref}
    >
      {!!icons[iconName] &&
        icons[iconName]({ className: iconClassName, fill, customColor })}
    </span>
  )
);

Icon.displayName = "Icon";
